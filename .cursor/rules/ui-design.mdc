---
description: 
globs: 
alwaysApply: true
---
---
description: 
globs: 
alwaysApply: true
---
# 🎨 高級感重視のデザインシステム

## デザイン原則

### 高級感・プレミアム体験
- **余白重視**: 臨場感のある豊富な余白（最低24px以上）
- **魅力的なボタン**: 思わず押したくなる高級感のあるボタン設計
- **カードデザイン禁止**: 自然で流れるようなレイアウト採用
- **チープな素材禁止**: 低品質な画像・アイコン・フォントは一切使用禁止
- **Lucideアイコン使用絶対禁止**: Heroicons、Phosphor Icons、カスタムSVGを使用

### 🚨 チープなアイコンデザインの絶対禁止ルール（必須）

#### 絶対禁止：角丸四角形アイコン
**角丸四角形の背景色付きアイコンは絶対に使用禁止**
- `w-12 h-12 bg-gradient-to-br rounded-xl` 等の角丸四角形アイコン
- `w-14 h-14 bg-gradient-to-r rounded-xl` 等の数値表示アイコン
- 色付き背景（グラデーション・単色問わず）の四角形アイコン
- 中央に文字・記号を配置した四角形デザイン

#### 絶対禁止：カテゴリータブの絵文字・カードデザイン
**カテゴリータブには絵文字アイコンとカードデザインを絶対使用禁止**
- 絵文字アイコン（☕ 🫖 🥐 🍰等）は絶対禁止
- カードデザイン（bg-white rounded-2xl shadow-lg等）は絶対禁止
- ホバー時のスケール効果（hover:scale-105等）は絶対禁止
- 背景色・シャドウ・角丸の組み合わせは絶対禁止

#### 推奨代替案：エレガントなテキスト統合デザイン
```tsx
// ❌ 絶対禁止：角丸四角形アイコンパターン
<div className="w-12 h-12 bg-gradient-to-br from-slate-600 to-slate-700 rounded-xl flex items-center justify-center mx-auto mb-4">
  <div className="w-3 h-3 bg-white rounded-full"></div>
</div>

// ❌ 絶対禁止：カードデザインタブパターン
<div className="bg-white rounded-2xl p-2 shadow-lg border border-gray-100">
  <button className="px-6 py-3 rounded-xl bg-amber-600 text-white shadow-lg hover:scale-105">
    <span className="text-lg">☕</span>
    <span>コーヒー</span>
  </button>
</div>

// ✅ 推奨：エレガントなテキスト統合デザイン
<div className="inline-flex items-baseline space-x-2 mb-3">
  <span className="text-3xl font-bold text-amber-600 group-hover:text-amber-700 transition-colors">2020</span>
  <span className="text-sm text-amber-500 font-medium">年</span>
</div>

// ✅ 推奨：シンプルなタブデザイン（カテゴリー用）
<div className="flex space-x-1">
  <button className="px-6 py-3 font-semibold transition-all duration-300 border-b-2 text-amber-600 border-amber-600">
    コーヒー
  </button>
  <button className="px-6 py-3 font-semibold transition-all duration-300 border-b-2 text-gray-600 border-transparent hover:text-amber-500 hover:border-amber-300">
    ティー
  </button>
</div>

// ✅ 推奨：SVGアイコンと文章の統合
<div className="flex items-center space-x-3 text-gray-700">
  <svg className="w-5 h-5 text-amber-600" fill="currentColor" viewBox="0 0 20 20">
    <path d="M..." />
  </svg>
  <span className="font-medium">厳選豆使用</span>
</div>
```

#### チープなアイコン実装チェックリスト
```
🚨 チープなアイコンの絶対確認項目：
□ 角丸四角形（rounded-xl, rounded-lg等）の背景色付きアイコンが削除されているか
□ w-12 h-12, w-14 h-14 等の固定サイズ四角形アイコンが削除されているか
□ bg-gradient-to-r, bg-gradient-to-br 等の背景グラデーションアイコンが削除されているか
□ 中央に文字・数値・記号を配置した四角形デザインが削除されているか
□ エレガントなテキスト統合デザインに変更されているか
□ SVGアイコンと文章の自然な統合が実装されているか
□ 高級感を損なう安っぽいアイコンが一切残っていないか

🚨 カテゴリータブの絶対確認項目：
□ 絵文字アイコン（☕ 🫖 🥐 🍰等）が完全に削除されているか
□ カードデザイン（bg-white rounded-2xl shadow-lg等）が削除されているか
□ ホバー時のスケール効果（hover:scale-105等）が削除されているか
□ シンプルな下線タブデザイン（border-b-2）が実装されているか
□ アクティブ状態が適切な色（text-amber-600 border-amber-600）で表示されているか
□ ホバー状態が自然な色変化（hover:text-amber-500）で実装されているか
□ 背景・シャドウ・角丸の組み合わせが一切使用されていないか
□ 全体的にミニマルで高級感のあるデザインになっているか
```

### 🏷️ HP専用セクション見出しルール（必須）

#### セクション見出しの英語化原則
**主要セクションの見出しは英語で表記し、高級感・国際的な印象を演出する**

#### 必須英語見出し一覧
```tsx
// 🚨 必須：セクション見出しの英語表記（カフェ・ジム共通）
const SECTION_HEADINGS = {
  // カフェHP用
  about: "ABOUT US",           // ❌ 「私たちについて」
  menu: "OUR MENU",           // ❌ 「メニュー」
  location: "LOCATION",       // ❌ 「店舗情報」
  contact: "CONTACT",         // ❌ 「お問い合わせ」
  news: "NEWS",               // ❌ 「お知らせ」
  gallery: "GALLERY",         // ❌ 「ギャラリー」
  concept: "OUR CONCEPT",     // ❌ 「コンセプト」
  access: "ACCESS",           // ❌ 「アクセス」
  
  // ジムHP用
  programs: "PROGRAMS",       // ❌ 「プログラム」
  trainers: "TRAINERS",       // ❌ 「トレーナー」
  facilities: "FACILITIES",   // ❌ 「施設」
  membership: "MEMBERSHIP",   // ❌ 「料金プラン」
} as const;
```

#### 見出しデザインの絶対ルール
```tsx
// ✅ 推奨：高級感のあるセクション見出しテンプレート（最新版）
export const SectionHeading: React.FC<{ title: string }> = ({ title }) => (
  <div className="text-center mb-16 animate-fade-in">
    {/* 🚨 高級感のあるセクション見出しデザイン */}
    <div className="relative inline-flex flex-col items-center mb-8">
      {/* 装飾ライン（上） */}
      <div className="w-16 h-px bg-gradient-to-r from-transparent via-amber-300 to-transparent mb-4"></div>
      
      {/* メイン見出し */}
      <div className="relative">
        <h3 className="text-sm font-semibold tracking-[0.2em] text-amber-800 uppercase mb-2 relative z-10">
          {title}
        </h3>
        {/* 背景装飾 */}
        <div className="absolute inset-0 bg-gradient-to-r from-transparent via-amber-50 to-transparent blur-sm opacity-70 scale-110"></div>
      </div>
      
      {/* 装飾ライン（下） */}
      <div className="w-24 h-px bg-gradient-to-r from-transparent via-amber-400 to-transparent mt-2"></div>
      
      {/* 装飾ドット */}
      <div className="flex space-x-1 mt-3">
        <div className="w-1 h-1 bg-amber-400 rounded-full"></div>
        <div className="w-1.5 h-1.5 bg-amber-500 rounded-full"></div>
        <div className="w-1 h-1 bg-amber-400 rounded-full"></div>
      </div>
    </div>
    
    {/* 以下、サブタイトル・説明文は日本語可 */}
    <h2 className="text-4xl md:text-5xl lg:text-6xl font-serif font-bold text-gray-900 mb-6">
      {/* サブタイトル（日本語） */}
    </h2>
  </div>
);

// ❌ 絶対禁止：シンプルな背景色付きパターン（旧デザイン）
export const SectionHeadingNG: React.FC = () => (
  <div className="inline-block px-4 py-2 text-amber-800 font-semibold text-sm mb-4">
    {/* シンプルすぎる見出しは禁止 */}
  </div>
);

// ❌ 絶対禁止：背景色・グラデーション背景パターン
export const SectionHeadingNG2: React.FC = () => (
  <div className="inline-block px-8 py-3 bg-gradient-to-r from-amber-100 to-orange-100 rounded-full">
    {/* 背景色・グラデーション背景は絶対禁止 */}
  </div>
);
```

#### セクション見出し実装チェックリスト（最新版）
```
🚨 高級感のあるセクション見出しの必須確認項目：
□ 主要セクション見出しが英語表記になっているか（About Us, Our Menu, Location, Contact等）
□ 装飾ライン（上）が w-16 h-px bg-gradient-to-r で実装されているか
□ メイン見出しが text-sm font-semibold tracking-[0.2em] text-amber-800 uppercase で実装されているか
□ 背景装飾（blur-sm opacity-70 scale-110）が適切に配置されているか
□ 装飾ライン（下）が w-24 h-px bg-gradient-to-r で実装されているか
□ 装飾ドット（3個のドット）が適切に配置されているか
□ relative inline-flex flex-col items-center の構造が正しく実装されているか
□ サブタイトル・説明文は日本語で適切に記載されているか
□ 全体的に高級感・洗練された印象を与えているか
□ 旧デザイン（シンプルなinline-block px-4 py-2）から更新されているか
```

## 🖼️ FV（ファーストビュー）設計ルール（必須）

### FVの基本原則
- **画面領域の完全活用**: ビューポートの100vh（100%の高さ）を必ず使用
- **FV画像の絶対配置**: カフェ関連の高品質画像を100vh全体に必ず配置
- **文字配置**: 見出し・テキストは中央ではなく中央より左側に配置（左寄せまたは左中央）
- **シンプル・ミニマル**: 不要な装飾要素・色付きアイコンは一切排除
- **インパクト重視**: 訪問者の注意を即座に引く強力なビジュアル
- **メッセージの明確性**: 3秒以内にサイトの目的が理解できる構成
- **高級感の演出**: プレミアムブランドにふさわしい洗練されたデザイン
- **アクション誘導**: 明確なCTAボタンの配置

### 🚨 FV画像配置ルール（絶対遵守）

#### ⚡ 100vh画像配置の絶対実装ルール
**FVには必ずカフェ関連の高品質画像を100vh全体に配置すること**
- 画像なしのFVは絶対禁止
- 画像が100vh未満の配置は絶対禁止
- 背景グラデーションのみは絶対禁止

#### 🚨 FVクリーンデザインの絶対ルール
**FVは極限までシンプル・ミニマルにすること**
- 色付きアイコン（緑・青・紫・オレンジ等）は絶対禁止
- 営業時間・営業中インジケーターは絶対禁止
- ロケーション情報（原宿・表参道等）は絶対禁止
- スクロールアイコンは絶対禁止
- 特徴アイコン（WiFi・電源・厳選豆等）は絶対禁止
- 不要な装飾要素は一切排除

#### 1. 🎯 完璧なFVテンプレート（一発生成用・コピペ必須）
```tsx
// 🚨 このテンプレートをそのまま使用すれば理想的なFVが完成します
import React from 'react';
import { Button } from '@/components/ui/Button';

export const HeroSection: React.FC = () => {
  return (
    <section 
      id="home" 
      className="
        w-screen h-screen 
        min-h-screen
        relative overflow-hidden
        supports-[height:100dvh]:h-[100dvh]
        supports-[height:100dvh]:min-h-[100dvh]
      "
    >
      {/* 🚨 必須：背景画像を100vh全体に絶対配置 */}
      <div className="absolute inset-0 z-0">
        <picture>
          <source 
            media="(min-width: 1920px)" 
            srcSet="https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&auto=format&fit=crop&w=2560&q=80" 
          />
          <source 
            media="(min-width: 1024px)" 
            srcSet="https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80" 
          />
          <source 
            media="(min-width: 768px)" 
            srcSet="https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&auto=format&fit=crop&w=1024&q=80" 
          />
          <img 
            src="https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&auto=format&fit=crop&w=768&q=80"
            alt="Café Lumière - 心地よいカフェ空間"
            className="w-full h-full object-cover"
            loading="eager"
            decoding="async"
          />
        </picture>
        
        {/* オーバーレイ（読みやすさ確保） */}
        <div className="absolute inset-0 bg-gradient-to-b from-black/60 via-black/40 to-black/70" />
      </div>
      
      {/* 🚨 FV文字配置：中央より左側（左中央配置） */}
      <div className="relative z-10 w-full h-full">
        <div className="h-full flex items-center justify-start pl-8 md:pl-16 lg:pl-24">
          <div className="text-left max-w-4xl space-y-8">

            
            {/* メインタイトル */}
            <h1 className="text-5xl md:text-7xl lg:text-8xl font-serif font-bold text-white leading-tight animate-fade-in animation-delay-100">
              <span className="block mb-4">心地よい空間で</span>
              <span className="bg-gradient-to-r from-amber-300 via-orange-300 to-yellow-300 bg-clip-text text-transparent">
                特別なひととき
              </span>
            </h1>
            
            {/* サブタイトル */}
            <p className="text-xl md:text-2xl lg:text-3xl font-serif text-white/90 max-w-3xl animate-fade-in animation-delay-200 leading-relaxed">
              厳選された豆から淹れる最高の一杯と、<br />
              温かみのある空間があなたをお待ちしています
            </p>
            
            {/* CTAボタン */}
            <div className="flex flex-col sm:flex-row gap-6 animate-fade-in animation-delay-300">
              <Button variant="luxury" size="xl" className="min-w-[200px] bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700">
                メニューを見る
              </Button>
              <Button variant="outline" size="xl" className="min-w-[200px] text-white border-white hover:bg-white hover:text-gray-900">
                店舗情報
              </Button>
            </div>
          </div>
        </div>
        
        {/* 🚨 高級感のある縦線スクロールアニメーション（右下） */}
        <div className="absolute bottom-8 right-8 flex flex-col items-center space-y-2 animate-fade-in animation-delay-500">
          <span className="text-white/70 text-xs font-medium uppercase tracking-wider rotate-90 origin-center mb-4">
            Scroll
          </span>
          <div className="w-px h-16 bg-gradient-to-b from-transparent via-white/60 to-transparent relative">
            <div className="absolute top-0 w-px h-4 bg-white animate-scroll-line"></div>
          </div>
        </div>
      </div>
    </section>
  );
};
```

#### 2. 画像サイズ・品質要件（強化版）
```css
/* 🚨 FV画像の絶対必須要件 */
.fv-image-container {
  /* 画面全体を完全にカバー（絶対指定） */
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw !important;
  height: 100vh !important;
  min-height: 100vh !important;
  z-index: 0;
  overflow: hidden;
}

.fv-image {
  /* 画面全体をカバー（絶対指定） */
  width: 100% !important;
  height: 100% !important;
  min-height: 100vh !important;
  
  /* 高品質表示 */
  object-fit: cover !important;
  object-position: center center;
  
  /* パフォーマンス最適化 */
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  
  /* WebP推奨、フォールバック対応 */
  /* 最小解像度: 1920x1080px */
  /* 推奨解像度: 2560x1440px以上 */
}

/* iOS Safari対応（絶対必須） */
@supports (height: 100dvh) {
  .fv-image-container {
    height: 100dvh !important;
    min-height: 100dvh !important;
  }
  
  .fv-image {
    height: 100% !important;
    min-height: 100dvh !important;
  }
}

/* レスポンシブ画像対応（強化版） */
.fv-image-responsive {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw !important;
  height: 100vh !important;
  min-height: 100vh !important;
  background-size: cover !important;
  background-position: center center;
  background-repeat: no-repeat;
  background-attachment: fixed; /* パララックス効果 */
}
```

#### 3. 実装チェックリスト（必須確認）
```
🚨 FV画像配置の絶対確認項目：
□ section要素が w-screen h-screen min-h-screen クラスを持っているか
□ 背景画像コンテナが absolute inset-0 z-0 クラスを持っているか
□ img要素が w-full h-full object-cover クラスを持っているか
□ picture要素で複数解像度に対応しているか
□ loading="eager" が設定されているか（FV画像は即座に読み込み）
□ alt属性が適切に設定されているか
□ オーバーレイが適切に配置されているか
□ iOS Safari対応（100dvh）が実装されているか
□ カフェ関連の高品質画像が使用されているか
□ 画像が実際に100vh全体に表示されているか（ブラウザで目視確認必須）

🚨 FVクリーンデザインの絶対確認項目：
□ 色付きアイコン（緑・青・紫・オレンジ等）が完全に削除されているか
□ 営業時間インジケーターが削除されているか
□ ロケーション情報（原宿・表参道等）が削除されているか
□ 特徴アイコンセクション（厳選豆・WiFi等）が削除されているか
□ 不要な装飾要素が一切残っていないか
□ シンプルで高級感のあるデザインになっているか

🚨 FVスクロールアニメーションの絶対確認項目：
□ 高級感のある縦線スクロールアニメーションが実装されているか
□ 丸いスクロールアイコンが削除されているか
□ カラフルなスクロール要素が削除されているか
□ 矢印・チェブロン等のアイコンが削除されているか
□ 位置が右下（bottom-8 right-8）に配置されているか
□ animate-scroll-line クラスが適用されているか

🚨 チープなアイコン・ボタンの絶対確認項目：
□ 丸いフローティングボタンが完全に削除されているか
□ 絵文字アイコンボタン（⬆️、📧等）が削除されているか
□ animate-bounce アニメーションが削除されているか
□ カラフルな円形SNSボタンが削除されているか
□ チープなオレンジグラデーションが削除されているか
□ 固定位置の装飾的ボタンが削除されているか
□ 全体的に高級感のあるデザインになっているか
```

### 🎯 画面領域活用の鉄則

#### 1. ビューポート100%活用の必須実装
```css
/* FVセクションの基本設定（必須） */
.hero-section {
  width: 100vw;
  height: 100vh;
  min-height: 100vh; /* フォールバック */
  position: relative;
  overflow: hidden;
  
  /* iOS Safari対応 */
  height: 100dvh; /* Dynamic Viewport Height */
  min-height: 100dvh;
}

/* モバイル対応（アドレスバー考慮） */
@supports (height: 100dvh) {
  .hero-section {
    height: 100dvh;
    min-height: 100dvh;
  }
}

/* 安全領域対応（ノッチ等） */
@supports (padding-top: env(safe-area-inset-top)) {
  .hero-section {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
  }
}
```

#### 2. レスポンシブ画面領域最適化
```tsx
// 画面サイズ別最適化コンポーネント
interface ViewportOptimizedHeroProps {
  children: React.ReactNode;
  backgroundImage?: string;
  overlayOpacity?: number;
}

export const ViewportOptimizedHero: React.FC<ViewportOptimizedHeroProps> = ({
  children,
  backgroundImage,
  overlayOpacity = 0.4
}) => {
  return (
    <section className="
      w-screen h-screen
      min-h-screen
      relative overflow-hidden
      flex items-center justify-center
      
      /* デバイス別最適化 */
      xs:h-screen xs:min-h-screen
      sm:h-screen sm:min-h-screen  
      md:h-screen md:min-h-screen
      lg:h-screen lg:min-h-screen
      xl:h-screen xl:min-h-screen
      2xl:h-screen 2xl:min-h-screen
      
      /* iOS Safari対応 */
      supports-[height:100dvh]:h-[100dvh]
      supports-[height:100dvh]:min-h-[100dvh]
    ">
      {/* 背景画像 */}
      {backgroundImage && (
        <div className="absolute inset-0 z-0">
          <picture>
            <source 
              media="(min-width: 1920px)" 
              srcSet={`${backgroundImage}-2560.webp`} 
            />
            <source 
              media="(min-width: 1024px)" 
              srcSet={`${backgroundImage}-1920.webp`} 
            />
            <source 
              media="(min-width: 768px)" 
              srcSet={`${backgroundImage}-1024.webp`} 
            />
            <img 
              src={`${backgroundImage}-768.webp`}
              alt="ヒーロー背景"
              className="w-full h-full object-cover"
              loading="eager"
              decoding="async"
            />
          </picture>
          
          {/* オーバーレイ */}
          <div 
            className="absolute inset-0 bg-black"
            style={{ opacity: overlayOpacity }}
          />
        </div>
      )}
      
      {/* コンテンツ */}
      <div className="relative z-10 w-full h-full">
        {children}
      </div>
    </section>
  );
};
```

### 🖼️ 画像配置パターン（実践版）

#### パターン1: フルスクリーン没入型
```tsx
// 画面全体を使った没入感のある配置
export const HeroImmersive: React.FC = () => {
  return (
    <ViewportOptimizedHero backgroundImage="/images/hero/business-innovation">
      <div className="h-full flex flex-col justify-center items-center text-center px-6 max-w-6xl mx-auto">
        {/* 上部余白 */}
        <div className="flex-1 min-h-[10vh]" />
        
        {/* メインコンテンツ */}
        <div className="flex-2 flex flex-col justify-center space-y-8">
                      <h1 className="text-4xl md:text-6xl lg:text-8xl font-serif font-bold text-white leading-tight animate-fade-in">
              <span className="block mb-4">未来を</span>
              <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
                創造する
              </span>
            </h1>
          
          <p className="text-xl md:text-2xl lg:text-3xl text-white/90 max-w-4xl animate-fade-in animation-delay-200">
            革新的なテクノロジーで、あなたのビジネスを次のステージへ
          </p>
          
          <div className="flex flex-col sm:flex-row gap-6 justify-center animate-fade-in animation-delay-400">
            <Button variant="luxury" size="xl" className="min-w-[200px]">
              今すぐ始める
            </Button>
            <Button variant="outline" size="xl" className="min-w-[200px] text-white border-white hover:bg-white hover:text-gray-900">
              詳細を見る
            </Button>
          </div>
        </div>
        
        {/* 下部余白 */}
        <div className="flex-1 min-h-[10vh] flex items-end justify-center pb-8">
          <div className="animate-bounce">
            <div className="w-8 h-12 border-2 border-white rounded-full flex justify-center">
              <div className="w-2 h-4 bg-white rounded-full mt-2 animate-pulse" />
            </div>
          </div>
        </div>
      </div>
    </ViewportOptimizedHero>
  );
};
```

#### パターン2: 黄金比分割レイアウト
```tsx
// 画面を黄金比で分割した美しいレイアウト
export const HeroGoldenRatio: React.FC = () => {
  return (
    <section className="w-screen h-screen min-h-screen relative overflow-hidden">
      <div className="h-full grid grid-cols-1 lg:grid-cols-5">
        {/* 左側：テキストエリア（黄金比 3:5） */}
        <div className="lg:col-span-3 bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900 flex items-center justify-center p-8 lg:p-16">
          <div className="max-w-2xl space-y-8 text-white">
            {/* プレタグ */}
            <div className="inline-block px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full text-sm font-semibold border border-white/20">
              ✨ 革新的ソリューション
            </div>
            
            {/* メインヘッドライン */}
            <h1 className="text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-serif font-bold leading-tight animate-slide-up">
              ビジネスの
              <span className="block mt-2 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                可能性を解放
              </span>
            </h1>
            
            {/* サブヘッドライン */}
            <p className="text-lg md:text-xl lg:text-2xl text-white/80 leading-relaxed animate-fade-in animation-delay-200">
              AIとデータサイエンスの力で、
              あなたの組織に新たな価値を創造します
            </p>
            
            {/* 特徴ポイント */}
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 animate-fade-in animation-delay-300">
              {[
                { icon: '🚀', text: '10倍の効率化' },
                { icon: '🔒', text: '企業級セキュリティ' },
                { icon: '📊', text: 'リアルタイム分析' },
                { icon: '🌐', text: 'グローバル展開' }
              ].map((item, index) => (
                <div key={index} className="flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-lg border border-white/10">
                  <span className="text-2xl">{item.icon}</span>
                  <span className="font-medium">{item.text}</span>
                </div>
              ))}
            </div>
            
            {/* CTAボタン */}
            <div className="flex flex-col sm:flex-row gap-4 animate-fade-in animation-delay-500">
              <Button variant="luxury" size="lg" className="min-w-[180px]">
                無料トライアル
              </Button>
              <Button variant="ghost" size="lg" className="min-w-[180px] text-white hover:bg-white/10">
                資料ダウンロード
              </Button>
            </div>
          </div>
        </div>
        
        {/* 右側：画像エリア（黄金比 2:5） */}
        <div className="lg:col-span-2 relative">
          <picture>
            <source 
              media="(min-width: 1024px)" 
              srcSet="/images/hero/technology-dashboard-1024.webp" 
            />
            <img 
              src="/images/hero/technology-dashboard-768.webp"
              alt="テクノロジーダッシュボード"
              className="w-full h-full object-cover"
              loading="eager"
            />
          </picture>
          
          {/* 装飾的オーバーレイ */}
          <div className="absolute inset-0 bg-gradient-to-l from-transparent via-blue-500/10 to-blue-900/30" />
          
          {/* フローティング要素 */}
          <div className="absolute top-1/4 right-8 w-16 h-16 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center animate-float">
            <span className="text-2xl">💡</span>
          </div>
          <div className="absolute bottom-1/3 right-16 w-12 h-12 bg-white/15 backdrop-blur-sm rounded-full flex items-center justify-center animate-float animation-delay-700">
            <span className="text-xl">⚡</span>
          </div>
        </div>
      </div>
    </section>
  );
};
```

### ✍️ 文字配置最適化ルール

#### 1. 階層構造の厳格な適用
```tsx
// 文字階層テンプレート（コピペ用）
const TextHierarchyTemplate = {
  // 最上位：ブランド・カテゴリー
  overtitle: {
    element: 'span',
    classes: 'text-sm md:text-base font-semibold uppercase tracking-wider text-blue-600 mb-4 block',
    maxLength: 20,
    example: '革新的ソリューション'
  },
  
  // 第1階層：メインメッセージ
  headline: {
    element: 'h1',
    classes: 'text-4xl md:text-6xl lg:text-8xl font-serif font-bold leading-tight mb-6',
    maxLength: 30,
    example: '未来を創造する'
  },
  
  // 第2階層：サブメッセージ
  subheadline: {
    element: 'h2',
    classes: 'text-xl md:text-2xl lg:text-3xl font-medium leading-relaxed mb-8',
    maxLength: 60,
    example: 'AIとデータサイエンスの力で新たな価値を'
  },
  
  // 第3階層：詳細説明
  description: {
    element: 'p',
    classes: 'text-base md:text-lg lg:text-xl leading-relaxed mb-8',
    maxLength: 120,
    example: '最先端技術と人間中心の設計思想で、あなたのビジネスに革新をもたらします。'
  },
  
  // 第4階層：アクション
  cta: {
    element: 'div',
    classes: 'flex flex-col sm:flex-row gap-4 justify-center',
    maxButtons: 2,
    example: '今すぐ始める / 詳細を見る'
  }
};
```

#### 2. 読みやすさ最適化
```css
/* 文字間隔・行間の最適化 */
.text-optimized {
  /* 文字間隔 */
  letter-spacing: -0.025em; /* 大見出し用 */
  letter-spacing: 0.0125em;  /* 本文用 */
  
  /* 行間 */
  line-height: 1.1;  /* 大見出し用 */
  line-height: 1.4;  /* 小見出し用 */
  line-height: 1.6;  /* 本文用 */
  
  /* 単語間隔 */
  word-spacing: 0.125em;
  
  /* テキストレンダリング最適化 */
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* デバイス別フォントサイズ最適化 */
@media (max-width: 640px) {
  .responsive-text {
    /* モバイル：読みやすさ重視 */
    font-size: clamp(1.5rem, 8vw, 3rem);
    line-height: 1.2;
  }
}

@media (min-width: 641px) and (max-width: 1024px) {
  .responsive-text {
    /* タブレット：バランス重視 */
    font-size: clamp(2rem, 6vw, 4rem);
    line-height: 1.15;
  }
}

@media (min-width: 1025px) {
  .responsive-text {
    /* デスクトップ：インパクト重視 */
    font-size: clamp(3rem, 5vw, 6rem);
    line-height: 1.1;
  }
}
```

#### 3. 配置パターンの使い分け

#### 🚨 FV文字配置の絶対ルール（カフェHP専用）
**FVの見出し・テキストは必ず「中央より左側」に配置すること**
- 完全左寄せ（text-left）または左中央（justify-start items-center）
- 中央配置（text-center）は絶対禁止
- 右寄せ（text-right）は絶対禁止

#### 🚨 スクロールアニメーションの絶対ルール
**スクロールアニメーションは高級感のある縦線タイプのみ許可**
- 縦線のシンプルなアニメーション（animate-scroll-line）のみ使用
- 丸いスクロールアイコンは絶対禁止
- カラフルなスクロールアイコンは絶対禁止
- 矢印・チェブロン等のアイコンは絶対禁止
- 位置は右下（bottom-8 right-8）固定

#### 🚨 チープなアイコン・ボタンの絶対禁止ルール
**チープなアイコン・ボタンは一切使用禁止**
- 丸いフローティングボタンは絶対禁止（特にオレンジ色）
- 絵文字アイコンボタンは絶対禁止（⬆️、📧、🏆等）
- animate-bounce の安っぽいアニメーションは絶対禁止
- カラフルな円形SNSボタンは絶対禁止
- チープなグラデーション（from-amber-600 to-orange-600等）は絶対禁止
- 固定位置の装飾的ボタンは絶対禁止

#### 🚨 Footerセクションの絶対禁止要素（必須）
**Footerに配置してはいけないチープな要素**
- 右下のオレンジ色フローティングボタン（fixed bottom-6 right-6等）は絶対禁止
- 絵文字アイコンの円形ボタン（⬆️、📧等）は絶対禁止
- animate-bounce等のバウンスアニメーションは絶対禁止
- カラフルなグラデーション背景（from-orange-500 to-amber-600等）は絶対禁止
- チープな影効果（shadow-2xl、hover:shadow-3xl等）は絶対禁止
- 過度な装飾的ボタンは絶対禁止

```tsx
// ❌ 絶対禁止：チープなフローティングボタンパターン
<div className="fixed bottom-6 right-6 z-50">
  <button className="w-14 h-14 bg-gradient-to-r from-orange-500 to-amber-600 rounded-full text-white shadow-2xl hover:shadow-3xl transition-all duration-300 animate-bounce">
    <span className="text-2xl">⬆️</span>
  </button>
</div>

// ❌ 絶対禁止：装飾的SNSボタンパターン  
<div className="fixed bottom-6 right-6 z-50 space-y-3">
  <button className="w-12 h-12 bg-blue-600 rounded-full text-white shadow-lg hover:scale-110 transition-transform">
    <span>📧</span>
  </button>
  <button className="w-12 h-12 bg-green-600 rounded-full text-white shadow-lg hover:scale-110 transition-transform">
    <span>🏆</span>
  </button>
</div>

// ✅ 推奨：シンプルで上品なFooterデザイン
<footer className="bg-gray-900 text-white">
  <div className="max-w-7xl mx-auto px-6 py-16">
    {/* 高級感のあるシンプルなFooterコンテンツ */}
    <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
      {/* ナビゲーション、SNS、コピーライト等 */}
    </div>
  </div>
</footer>
```

#### Footer実装チェックリスト（必須）
```
🚨 Footerの絶対確認項目：
□ 右下のオレンジ色フローティングボタンが完全に削除されているか
□ 絵文字アイコンボタン（⬆️、📧、🏆等）が削除されているか
□ animate-bounce アニメーションが削除されているか
□ fixed bottom-6 right-6 の固定配置要素が削除されているか
□ カラフルなグラデーション背景が削除されているか
□ 過度な影効果（shadow-2xl、shadow-3xl等）が削除されているか
□ hover:scale-110 等の安っぽいホバー効果が削除されているか
□ 全体的にシンプルで上品なFooterデザインになっているか
□ 高級感を損なう装飾的要素が一切残っていないか
```

```tsx
// ✅ 推奨：FV専用左中央配置パターン（クリーンデザイン）
export const HeroTextLeftCenter: React.FC = () => (
  <div className="h-full flex items-center justify-start pl-8 md:pl-16 lg:pl-24">
    <div className="text-left max-w-2xl space-y-6">
      {/* シンプルなオーバータイトル */}
      <span className="text-amber-600 font-semibold uppercase tracking-wider text-sm">
        Premium Café Experience
      </span>
      
      {/* メインヘッドライン（装飾なし） */}
      <h1 className="text-4xl md:text-6xl lg:text-7xl font-serif font-bold text-white leading-tight">
        心を満たす
        <span className="block text-amber-400">至福のひととき</span>
      </h1>
      
      {/* シンプルな説明文 */}
      <p className="text-lg md:text-xl text-white/90 leading-relaxed max-w-xl">
        厳選された豆から生まれる最高の一杯で、あなたの特別な時間を彩ります
      </p>
      
      {/* CTAボタンのみ（その他の要素は一切なし） */}
      <div className="flex flex-col sm:flex-row gap-4">
        <Button variant="luxury" size="lg">
          メニューを見る
        </Button>
        <Button variant="outline" size="lg" className="text-white border-white hover:bg-white hover:text-gray-900">
          店舗情報
        </Button>
      </div>
    </div>
  </div>
);

// ❌ 禁止：中央配置パターン
export const HeroTextCenter: React.FC = () => (
  <div className="text-center"> {/* 絶対禁止 */}
    <h1>中央配置は禁止</h1>
  </div>
);
```

```tsx
// 左寄せ：力強い・主張的
export const TextAlignmentLeft: React.FC = () => (
  <div className="text-left max-w-4xl space-y-6">
    <span className="text-blue-600 font-semibold uppercase tracking-wider text-sm">
      革新的テクノロジー
    </span>
    <h1 className="text-5xl md:text-7xl font-serif font-bold text-gray-900 leading-tight">
      ビジネスを
      <span className="block text-blue-600">加速させる</span>
    </h1>
    <p className="text-xl text-gray-600 leading-relaxed max-w-2xl">
      最先端のAI技術で、あなたの組織の可能性を最大化します
    </p>
  </div>
);

// 中央寄せ：バランス・安定感
export const TextAlignmentCenter: React.FC = () => (
  <div className="text-center max-w-4xl mx-auto space-y-6">
    <span className="text-purple-600 font-semibold uppercase tracking-wider text-sm">
      プレミアム体験
    </span>
    <h1 className="text-5xl md:text-7xl font-serif font-bold text-gray-900 leading-tight">
      最高の
      <span className="block bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
        パフォーマンス
      </span>
    </h1>
    <p className="text-xl text-gray-600 leading-relaxed max-w-3xl mx-auto">
      洗練されたデザインと最先端技術の融合で、究極のユーザー体験を提供
    </p>
  </div>
);

// 右寄せ：エレガント・洗練
export const TextAlignmentRight: React.FC = () => (
  <div className="text-right max-w-4xl ml-auto space-y-6">
    <span className="text-pink-600 font-semibold uppercase tracking-wider text-sm">
      ラグジュアリー
    </span>
    <h1 className="text-5xl md:text-7xl font-serif font-bold text-gray-900 leading-tight">
      <span className="block bg-gradient-to-l from-pink-600 to-purple-600 bg-clip-text text-transparent">
        エレガンス
      </span>
      を極める
    </h1>
    <p className="text-xl text-gray-600 leading-relaxed max-w-2xl ml-auto">
      細部まで磨き抜かれた美しさと機能性の完璧な調和
    </p>
  </div>
);
```

### 🎨 プレースホルダー画像戦略

#### 1. 開発フェーズ別画像戦略
```typescript
// 開発段階に応じたプレースホルダー戦略
const PlaceholderStrategy = {
  // フェーズ1: プロトタイプ・ワイヤーフレーム
  prototype: {
    service: 'https://via.placeholder.com',
    format: 'simple',
    example: 'https://via.placeholder.com/1920x1080/667eea/ffffff?text=Hero+Image',
    purpose: 'レイアウト確認・構造検証'
  },
  
  // フェーズ2: デザイン開発
  design: {
    service: 'https://source.unsplash.com',
    format: 'curated',
    example: 'https://source.unsplash.com/1920x1080/?business,technology',
    purpose: '雰囲気確認・色調検証'
  },
  
  // フェーズ3: 実装・テスト
  implementation: {
    service: 'https://picsum.photos',
    format: 'realistic',
    example: 'https://picsum.photos/1920/1080?random=1',
    purpose: 'パフォーマンステスト・実装確認'
  },
  
  // フェーズ4: 本番準備
  production: {
    service: 'custom',
    format: 'optimized',
    example: '/images/hero/hero-main.webp',
    purpose: '最終品質・SEO最適化'
  }
};
```

#### 2. 業界別プレースホルダー画像
```tsx
// 業界・用途別のプレースホルダー生成
export const generateIndustryPlaceholder = (
  industry: 'business' | 'technology' | 'healthcare' | 'education' | 'finance',
  size: { width: number; height: number } = { width: 1920, height: 1080 }
) => {
  const industryKeywords = {
    business: 'business,office,professional,team,meeting,corporate',
    technology: 'technology,innovation,digital,ai,data,software,computer',
    healthcare: 'healthcare,medical,clean,care,professional,modern',
    education: 'education,learning,knowledge,books,study,university',
    finance: 'finance,banking,investment,growth,charts,professional'
  };
  
  const gradientFallbacks = {
    business: 'linear-gradient(135deg, #1e40af 0%, #3b82f6 100%)',
    technology: 'linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%)',
    healthcare: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',
    education: 'linear-gradient(135deg, #dc2626 0%, #f59e0b 100%)',
    finance: 'linear-gradient(135deg, #1f2937 0%, #374151 100%)'
  };
  
  return {
    unsplash: `https://source.unsplash.com/${size.width}x${size.height}/?${industryKeywords[industry]}`,
    picsum: `https://picsum.photos/${size.width}/${size.height}?random=${industry}`,
    gradient: gradientFallbacks[industry],
    placeholder: `https://via.placeholder.com/${size.width}x${size.height}/667eea/ffffff?text=${industry.toUpperCase()}+Hero`
  };
};

// 使用例
const BusinessHeroPlaceholder: React.FC = () => {
  const placeholders = generateIndustryPlaceholder('business');
  
  return (
    <div className="w-full h-screen relative overflow-hidden">
      {/* プライマリ画像（Unsplash） */}
      <img 
        src={placeholders.unsplash}
        alt="ビジネス関連のプレースホルダー画像"
        className="w-full h-full object-cover"
        onError={(e) => {
          // フォールバック：Picsum
          e.currentTarget.src = placeholders.picsum;
          e.currentTarget.onerror = () => {
            // 最終フォールバック：グラデーション
            e.currentTarget.style.display = 'none';
            const parent = e.currentTarget.parentElement;
            if (parent) {
              parent.style.background = placeholders.gradient;
            }
          };
        }}
      />
      
      {/* オーバーレイ */}
      <div className="absolute inset-0 bg-black/40" />
      
      {/* コンテンツ */}
      <div className="absolute inset-0 flex items-center justify-center text-white">
        <div className="text-center space-y-6">
          <h1 className="text-6xl font-serif font-bold">
            ビジネスの未来を
            <span className="block text-blue-400">創造する</span>
          </h1>
          <p className="text-xl max-w-2xl">
            革新的なソリューションで、あなたの組織に新たな価値を
          </p>
        </div>
      </div>
    </div>
  );
};
```

#### 3. 実画像への移行チェックリスト
```markdown
## 📋 プレースホルダーから実画像への移行チェックリスト

### 準備段階
- [ ] 画像要件の明確化（サイズ、形式、品質）
- [ ] ブランドガイドラインの確認
- [ ] 著作権・ライセンスの確認
- [ ] 予算・スケジュールの確定

### 制作段階
- [ ] 複数解像度版の準備（2560px, 1920px, 1024px, 768px）
- [ ] WebP形式での最適化
- [ ] JPEGフォールバックの準備
- [ ] ファイルサイズの最適化（モバイル500KB以下）

### 実装段階
- [ ] 画像パスの更新
- [ ] alt属性の適切な設定
- [ ] loading属性の設定（eager/lazy）
- [ ] picture要素での複数フォーマット対応

### 検証段階
- [ ] 全デバイスでの表示確認
- [ ] 読み込み速度の測定
- [ ] SEO要素の確認
- [ ] アクセシビリティの確認

### 最適化段階
- [ ] CDN配信の設定
- [ ] キャッシュ戦略の実装
- [ ] 遅延読み込みの最適化
- [ ] Core Web Vitalsの測定
```

### 🎯 FV実装時の必須チェックリスト

#### デザイン・レイアウト
- [ ] 画面領域（100vh）を完全に活用しているか
- [ ] 🚨 **FV画像が100vh全体に絶対配置されているか**（カフェ関連高品質画像必須）
- [ ] 🚨 **FV文字配置が中央より左側（左寄せまたは左中央）になっているか**
- [ ] ❌ **FV文字が中央配置（text-center）になっていないか**（絶対禁止）
- [ ] 🚨 **色付きアイコン・装飾要素が完全に削除されているか**（絶対禁止）
- [ ] 🚨 **営業時間・ロケーション情報が削除されているか**（絶対禁止）
- [ ] 🚨 **スクロールアイコンが削除されているか**（絶対禁止）
- [ ] 🚨 **角丸四角形アイコン（w-12 h-12 rounded-xl等）が完全に削除されているか**（絶対禁止）
- [ ] 🚨 **背景色付きグラデーションアイコンが削除されているか**（絶対禁止）
- [ ] エレガントなテキスト統合デザインが実装されているか
- [ ] 画像が高品質（WebP形式、適切な解像度）か
- [ ] テキストが読みやすい（十分なコントラスト）か
- [ ] レスポンシブ対応が適切か
- [ ] アニメーションが滑らかで自然か
- [ ] iOS Safari対応（100dvh使用）ができているか
- [ ] 安全領域（ノッチ等）への対応ができているか

#### コンテンツ・メッセージ
- [ ] 3秒以内にサイトの目的が理解できるか
- [ ] メインメッセージが明確で印象的か
- [ ] 文字階層が適切に設定されているか
- [ ] CTAボタンが目立つ位置にあるか
- [ ] ブランドの個性が表現されているか
- [ ] スクロール促進要素があるか

#### 🚨 セクション見出し（カフェHP専用）
- [ ] **主要セクション見出しが英語表記になっているか**（ABOUT US, OUR MENU等）
- [ ] **見出しに背景色・グラデーション背景が使用されていないか**（絶対禁止）
- [ ] **text-amber-800 font-semibold text-sm のスタイルが適用されているか**
- [ ] **inline-block px-4 py-2 のシンプルなレイアウトが適用されているか**
- [ ] サブタイトル・説明文は日本語で適切に記載されているか

#### 技術・パフォーマンス
- [ ] 画像の読み込み速度が適切か（3秒以内）
- [ ] Critical CSSが実装されているか
- [ ] 画像の最適化が適切か
- [ ] SEOタグが適切に設定されているか
- [ ] プレースホルダーから実画像への移行準備ができているか

#### アクセシビリティ
- [ ] キーボードナビゲーションが可能か
- [ ] スクリーンリーダー対応がされているか
- [ ] カラーコントラストが適切か（WCAG AA準拠）
- [ ] 動きを抑制する設定に対応しているか
- [ ] alt属性が適切に設定されているか

この包括的なFVルールにより、画面領域を最大限活用し、高品質な画像配置と最適化された文字配置を実現できます。プレースホルダー画像から実画像への段階的移行も効率的に行えます。

## カラーシステム（高級感重視）

```css
:root {
  /* プライマリカラー（深みのあるブルー系） */
  --color-primary-50: #eff6ff;
  --color-primary-100: #dbeafe;
  --color-primary-200: #bfdbfe;
  --color-primary-300: #93c5fd;
  --color-primary-400: #60a5fa;
  --color-primary-500: #3b82f6;
  --color-primary-600: #2563eb;
  --color-primary-700: #1d4ed8;
  --color-primary-800: #1e40af;
  --color-primary-900: #1e3a8a;
  --color-primary-950: #172554;

  /* セカンダリカラー（エレガントなパープル系） */
  --color-secondary-50: #faf5ff;
  --color-secondary-100: #f3e8ff;
  --color-secondary-200: #e9d5ff;
  --color-secondary-300: #d8b4fe;
  --color-secondary-400: #c084fc;
  --color-secondary-500: #a855f7;
  --color-secondary-600: #9333ea;
  --color-secondary-700: #7c3aed;
  --color-secondary-800: #6b21a8;
  --color-secondary-900: #581c87;
  --color-secondary-950: #3b0764;

  /* ニュートラルカラー（豊富なバリエーション） */
  --color-neutral-0: #ffffff;
  --color-neutral-50: #fafafa;
  --color-neutral-100: #f4f4f5;
  --color-neutral-200: #e4e4e7;
  --color-neutral-300: #d4d4d8;
  --color-neutral-400: #a1a1aa;
  --color-neutral-500: #71717a;
  --color-neutral-600: #52525b;
  --color-neutral-700: #3f3f46;
  --color-neutral-800: #27272a;
  --color-neutral-900: #18181b;
  --color-neutral-950: #09090b;

  /* プレミアムグラデーション */
  --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  --gradient-hero: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  --gradient-premium: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
  --gradient-luxury: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);

  /* 影・エフェクト */
  --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --shadow-premium: 0 32px 64px -12px rgb(59 130 246 / 0.25);
  --shadow-luxury: 0 40px 80px -12px rgb(168 85 247 / 0.3);
}
```

## タイポグラフィシステム

### フォントファミリー
```css
/* プレミアムフォント必須 */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Playfair+Display:wght@400;500;600;700;800;900&display=swap');

/* 🚨 重要：明朝体フォント変更（ユーザー要望対応） */
.font-heading {
  font-family: 'Playfair Display', serif; /* ❌ 旧：heading専用クラス */
  font-feature-settings: 'liga' on, 'calt' on;
}

.font-serif {
  font-family: 'Playfair Display', serif; /* ✅ 推奨：明朝体フォント */
  font-feature-settings: 'liga' on, 'calt' on;
}

.font-body {
  font-family: 'Inter', sans-serif;
  font-feature-settings: 'liga' on, 'calt' on, 'kern' on;
}

/* 🚨 フォント使用ルール変更 */
/*
旧：font-heading → 新：font-serif
- HeroSectionのメインタイトル・サブタイトルは font-serif を使用
- 「あなたの限界を超えていこう」等のメッセージテキストは明朝体で表示
- 高級感・上品さを演出するため明朝体を積極活用
*/
```

### タイポグラフィスケール
```css
:root {
  --font-size-xs: 0.75rem;     /* 12px */
  --font-size-sm: 0.875rem;    /* 14px */
  --font-size-base: 1rem;      /* 16px */
  --font-size-lg: 1.125rem;    /* 18px */
  --font-size-xl: 1.25rem;     /* 20px */
  --font-size-2xl: 1.5rem;     /* 24px */
  --font-size-3xl: 1.875rem;   /* 30px */
  --font-size-4xl: 2.25rem;    /* 36px */
  --font-size-5xl: 3rem;       /* 48px */
  --font-size-6xl: 3.75rem;    /* 60px */
  --font-size-7xl: 4.5rem;     /* 72px */
  --font-size-8xl: 6rem;       /* 96px */
  --font-size-9xl: 8rem;       /* 128px */
}
```

## コンポーネント設計原則

### ボタンデザイン（プレミアム）
```tsx
// src/components/ui/Button/Button.tsx
interface ButtonProps {
  variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'luxury';
  size: 'sm' | 'md' | 'lg' | 'xl';
  children: React.ReactNode;
  disabled?: boolean;
  loading?: boolean;
  className?: string;
  onClick?: () => void;
}

export const Button: React.FC<ButtonProps> = ({
  variant = 'primary',
  size = 'md',
  children,
  disabled = false,
  loading = false,
  className = '',
  onClick
}) => {
  const baseClasses = `
    relative inline-flex items-center justify-center font-semibold
    transition-all duration-300 ease-in-out transform
    focus:outline-none focus:ring-4 focus:ring-offset-2
    disabled:opacity-50 disabled:cursor-not-allowed
    hover:scale-105 active:scale-95
  `;

  const variantClasses = {
    primary: `
      bg-gradient-to-r from-blue-600 to-blue-700
      hover:from-blue-700 hover:to-blue-800
      text-white shadow-lg hover:shadow-xl
      focus:ring-blue-500
    `,
    secondary: `
      bg-gradient-to-r from-purple-600 to-purple-700
      hover:from-purple-700 hover:to-purple-800
      text-white shadow-lg hover:shadow-xl
      focus:ring-purple-500
    `,
    outline: `
      border-2 border-gray-300 bg-white
      hover:border-gray-400 hover:bg-gray-50
      text-gray-700 hover:text-gray-900
      focus:ring-gray-500
    `,
    ghost: `
      bg-transparent hover:bg-gray-100
      text-gray-700 hover:text-gray-900
      focus:ring-gray-500
    `,
    luxury: `
      bg-gradient-to-r from-purple-600 via-blue-600 to-purple-600
      bg-size-200 animate-gradient-x
      text-white shadow-luxury
      hover:shadow-2xl focus:ring-purple-500
    `
  };

  const sizeClasses = {
    sm: 'px-4 py-2 text-sm rounded-lg',
    md: 'px-6 py-3 text-base rounded-xl',
    lg: 'px-8 py-4 text-lg rounded-xl',
    xl: 'px-10 py-5 text-xl rounded-2xl'
  };
  return (
    <button
      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}
      disabled={disabled || loading}
      onClick={onClick}
    >
      {loading && (
        <div className="absolute inset-0 flex items-center justify-center">
          <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
        </div>
      )}
      <span className={loading ? 'opacity-0' : 'opacity-100'}>
        {children}
      </span>
    </button>
  );
};
```

### 入力フィールド（高級感）

#### 🎨 高級感フォームインプットの設計原則
**フォーム要素には洗練された高級感を演出し、ユーザー体験を向上させる**

#### 🚨 必須実装：プレミアム品質のインプットデザイン
- **Border Radius**: `rounded-xl`で適度な丸みを演出
- **パディング調整**: `px-6`で余裕のある内部スペース確保
- **多段階シャドウ**: hover/focusで段階的な立体感演出
- **フォントウェイト**: `font-medium`で読みやすさ向上
- **統一デザイン**: 全インプット要素の一貫したスタイル適用

#### ✅ 推奨：高級感フォームインプットテンプレート
```tsx
// 🚨 必須：高級感のあるインプットクラス定義
const PREMIUM_INPUT_CLASSES = {
  // ベーススタイル（全インプット共通）
  base: 'w-full px-6 py-4 border border-gray-300 rounded-xl focus:border-red-500 focus:ring-2 focus:ring-red-200 transition-all duration-300 text-base bg-white hover:border-gray-400 font-medium',
  
  // シャドウ効果（3段階）
  shadows: 'shadow-sm hover:shadow-md focus:shadow-lg',
  
  // エラー状態
  error: 'border-red-300 focus:border-red-500 focus:ring-red-200',
  
  // 成功状態
  success: 'border-green-300 focus:border-green-500 focus:ring-green-200'
} as const;

// ✅ 推奨：汎用インプットコンポーネント
export const PremiumInput: React.FC<InputProps> = ({
  label,
  placeholder,
  type = 'text',
  value,
  onChange,
  error,
  disabled = false,
  required = false,
  className = ''
}) => {
  return (
    <div className={`space-y-3 ${className}`}>
      {label && (
        <label className="block text-sm font-semibold text-gray-700 mb-3">
          {label}
          {required && <span className="text-red-500 ml-1">*</span>}
        </label>
      )}
      <div className="relative">
        <input
          type={type}
          value={value}
          onChange={(e) => onChange?.(e.target.value)}
          placeholder={placeholder}
          disabled={disabled}
          className={`
            ${PREMIUM_INPUT_CLASSES.base}
            ${PREMIUM_INPUT_CLASSES.shadows}
            ${error ? PREMIUM_INPUT_CLASSES.error : ''}
            ${disabled ? 'opacity-50 cursor-not-allowed' : ''}
          `}
        />
      </div>
      {error && (
        <p className="text-sm text-red-600 flex items-center space-x-1 mt-2">
          <span>⚠️</span>
          <span>{error}</span>
        </p>
      )}
    </div>
  );
};

// ✅ 推奨：プレミアムテキストエリア
export const PremiumTextarea: React.FC<TextareaProps> = ({
  label,
  placeholder,
  value,
  onChange,
  rows = 6,
  error,
  disabled = false,
  required = false,
  className = ''
}) => {
  return (
    <div className={`space-y-3 ${className}`}>
      {label && (
        <label className="block text-sm font-semibold text-gray-700 mb-3">
          {label}
          {required && <span className="text-red-500 ml-1">*</span>}
        </label>
      )}
      <div className="relative">
        <textarea
          value={value}
          onChange={(e) => onChange?.(e.target.value)}
          placeholder={placeholder}
          rows={rows}
          disabled={disabled}
          className={`
            ${PREMIUM_INPUT_CLASSES.base}
            ${PREMIUM_INPUT_CLASSES.shadows}
            resize-none
            ${error ? PREMIUM_INPUT_CLASSES.error : ''}
            ${disabled ? 'opacity-50 cursor-not-allowed' : ''}
          `}
        />
      </div>
      {error && (
        <p className="text-sm text-red-600 flex items-center space-x-1 mt-2">
          <span>⚠️</span>
          <span>{error}</span>
        </p>
      )}
    </div>
  );
};

// ✅ 推奨：プレミアムセレクト
export const PremiumSelect: React.FC<SelectProps> = ({
  label,
  options,
  value,
  onChange,
  placeholder = '選択してください',
  error,
  disabled = false,
  required = false,
  className = ''
}) => {
  return (
    <div className={`space-y-3 ${className}`}>
      {label && (
        <label className="block text-sm font-semibold text-gray-700 mb-3">
          {label}
          {required && <span className="text-red-500 ml-1">*</span>}
        </label>
      )}
      <div className="relative">
        <select
          value={value}
          onChange={(e) => onChange?.(e.target.value)}
          disabled={disabled}
          className={`
            ${PREMIUM_INPUT_CLASSES.base}
            ${PREMIUM_INPUT_CLASSES.shadows}
            ${error ? PREMIUM_INPUT_CLASSES.error : ''}
            ${disabled ? 'opacity-50 cursor-not-allowed' : ''}
          `}
        >
          <option value="">{placeholder}</option>
          {options.map((option) => (
            <option key={option.value} value={option.value}>
              {option.label}
            </option>
          ))}
        </select>
      </div>
      {error && (
        <p className="text-sm text-red-600 flex items-center space-x-1 mt-2">
          <span>⚠️</span>
          <span>{error}</span>
        </p>
      )}
    </div>
  );
};
```

#### 🎯 高級感フォーム実装チェックリスト（必須）

#### インプットデザイン確認項目
```
🚨 プレミアムフォームインプットの必須確認項目：
□ rounded-xl のボーダーラディウスが適用されているか
□ px-6 py-4 の余裕のあるパディングが設定されているか
□ shadow-sm hover:shadow-md focus:shadow-lg の3段階シャドウが実装されているか
□ font-medium でフォントウェイトが調整されているか
□ transition-all duration-300 でスムーズなアニメーションが実装されているか
□ focus:ring-2 focus:ring-red-200 でフォーカスリングが適切に表示されるか
□ hover:border-gray-400 でホバー状態の視覚的フィードバックがあるか
□ label要素が font-semibold で強調されているか
□ エラー状態が適切に視覚化されているか
□ 全フォーム要素（input、textarea、select）で統一されたスタイルが適用されているか
```

#### ボタンデザイン確認項目
```
🚨 プレミアムフォームボタンの必須確認項目：
□ 送信ボタンに rounded-xl が適用されているか
□ グラデーション背景（from-red-600 to-red-700）が実装されているか
□ ホバー効果（hover:scale-105）が実装されているか
□ シャドウ効果（shadow-lg hover:shadow-xl）が実装されているか
□ ボタンテキストが適切に中央揃えされているか
□ フォーム全体のスタイル統一が保たれているか
□ 高級感・洗練された印象を与えているか
```

#### UX改善効果
- **視覚的フィードバック**: hover/focusで明確な状態変化
- **高級感演出**: 丸みと影による洗練されたデザイン
- **一貫性確保**: 全フォーム要素での統一されたスタイル
- **アクセシビリティ向上**: フォーカス状態の視認性強化
- **ブランド価値向上**: プレミアムブランドイメージに合致

#### 実装済み事例（ContactSectionでの適用）
```tsx
// ✅ 実装済み：ContactSection.tsxでの高級感フォーム
<input
  type="text"
  id="name"
  name="name"
  required
  className="w-full px-6 py-4 border border-gray-300 rounded-xl focus:border-red-500 focus:ring-2 focus:ring-red-200 transition-all duration-300 text-base bg-white hover:border-gray-400 shadow-sm hover:shadow-md focus:shadow-lg font-medium"
  placeholder="山田 太郎"
/>
```

## プレミアムアニメーション

### 🚨 HP専用：Lenisスムーススクロールライブラリ（必須）

#### Lenisライブラリの必須導入ルール（HP案件のみ）
**ホームページ（HP）案件では、Lenisスムーススクロールライブラリの導入が必須**
- システム開発案件では不要（導入禁止）
- HP案件では必ずLenisを実装してプレミアムなスクロール体験を提供

#### Lenisライブラリの必須実装手順
```bash
# 1. Lenisライブラリのインストール（HP案件のみ）
npm install @studio-freight/lenis
# または
yarn add @studio-freight/lenis
```

```tsx
// 2. src/hooks/useLenis.ts - Lenisカスタムフック（必須）
'use client'

import { useEffect } from 'react'
import Lenis from '@studio-freight/lenis'

export const useLenis = () => {
  useEffect(() => {
    // Lenisインスタンスの作成
    const lenis = new Lenis({
      duration: 1.2,           // スクロール時間
      easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // イージング
      direction: 'vertical',   // 縦スクロール
      gestureDirection: 'vertical',
      smooth: true,           // スムーススクロール有効
      smoothTouch: false,     // タッチデバイスでは無効（パフォーマンス重視）
      touchMultiplier: 2,     // タッチ感度
    })

    // フレーム更新関数
    function raf(time: number) {
      lenis.raf(time)
      requestAnimationFrame(raf)
    }

    requestAnimationFrame(raf)

    // クリーンアップ
    return () => {
      lenis.destroy()
    }
  }, [])
}
```

```tsx
// 3. src/app/layout.tsx - レイアウトでLenisを適用（必須）
'use client'

import { useLenis } from '@/hooks/useLenis'

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  // HP案件では必須のLenisスムーススクロール
  useLenis()

  return (
    <html lang="ja">
      <body className="antialiased">
        {children}
      </body>
    </html>
  )
}
```

```tsx
// 4. スムーススクロールナビゲーション実装例
'use client'

import { useEffect, useState } from 'react'

export const SmoothScrollNav: React.FC = () => {
  const [lenis, setLenis] = useState<any>(null)

  useEffect(() => {
    // Lenisインスタンスの取得
    const lenisInstance = (window as any).lenis
    setLenis(lenisInstance)
  }, [])

  const scrollTo = (target: string) => {
    if (lenis) {
      lenis.scrollTo(target, {
        duration: 1.5,
        easing: (t: number) => Math.min(1, 1.001 - Math.pow(2, -10 * t))
      })
    }
  }

  return (
    <nav className="fixed top-0 left-0 w-full z-50 bg-white/90 backdrop-blur-md border-b border-gray-200">
      <div className="container mx-auto px-6 py-4">
        <div className="flex items-center justify-between">
          <div className="font-serif text-2xl font-bold text-gray-900">
            Premium Cafe
          </div>
          
          <ul className="hidden md:flex space-x-8">
            <li>
              <button 
                onClick={() => scrollTo('#about')}
                className="font-semibold text-gray-700 hover:text-amber-600 transition-colors duration-300"
              >
                ABOUT US
              </button>
            </li>
            <li>
              <button 
                onClick={() => scrollTo('#menu')}
                className="font-semibold text-gray-700 hover:text-amber-600 transition-colors duration-300"
              >
                OUR MENU
              </button>
            </li>
            <li>
              <button 
                onClick={() => scrollTo('#location')}
                className="font-semibold text-gray-700 hover:text-amber-600 transition-colors duration-300"
              >
                LOCATION
              </button>
            </li>
            <li>
              <button 
                onClick={() => scrollTo('#contact')}
                className="font-semibold text-gray-700 hover:text-amber-600 transition-colors duration-300"
              >
                CONTACT
              </button>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  )
}
```

#### Lenisライブラリ実装チェックリスト（HP案件専用）
```
🚨 Lenisスムーススクロールの必須確認項目（HP案件のみ）：
□ @studio-freight/lenis がパッケージとしてインストールされているか
□ useLenis カスタムフックが src/hooks/useLenis.ts に作成されているか
□ duration: 1.2, easing, smooth: true の設定が正しく実装されているか
□ smoothTouch: false でタッチデバイスでのパフォーマンスが考慮されているか
□ layout.tsx でuseLenis()が呼び出されているか
□ ナビゲーションでlenis.scrollTo()によるスムーススクロールが実装されているか
□ requestAnimationFrame(raf)によるフレーム更新が正しく動作しているか
□ lenis.destroy()によるクリーンアップが適切に実装されているか
□ 全体的にプレミアムで滑らかなスクロール体験が提供されているか
□ システム案件ではLenisが導入されていない（HP案件専用）ことが確認されているか

🚨 HP案件とシステム案件の区別確認：
□ HP案件（カフェ、ジム、企業サイト等）→ Lenis必須導入
□ システム案件（管理画面、ダッシュボード、CRUD操作等）→ Lenis導入不要
□ 案件タイプに応じて適切にLenisの導入可否が判断されているか
```

### アニメーション定義
```css
/* src/styles/animations.css */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes gradient-x {
  0%, 100% {
    background-size: 200% 200%;
    background-position: left center;
  }
  50% {
    background-size: 200% 200%;
    background-position: right center;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes pulse-soft {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* 🚨 高級感のある縦線スクロールアニメーション（必須） */
@keyframes scroll-line {
  0% {
    transform: translateY(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(48px);
    opacity: 0;
  }
}

/* アニメーションクラス */
.animate-fade-in {
  animation: fadeIn 0.8s ease-out;
}

.animate-slide-up {
  animation: slideUp 0.6s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.4s ease-out;
}

.animate-gradient-x {
  animation: gradient-x 15s ease infinite;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-soft {
  animation: pulse-soft 2s ease-in-out infinite;
}

/* 🚨 高級感のある縦線スクロールアニメーション */
.animate-scroll-line {
  animation: scroll-line 2s ease-in-out infinite;
}

/* アニメーション遅延 */
.animation-delay-100 { animation-delay: 100ms; }
.animation-delay-200 { animation-delay: 200ms; }
.animation-delay-300 { animation-delay: 300ms; }
.animation-delay-500 { animation-delay: 500ms; }
.animation-delay-700 { animation-delay: 700ms; }
```

## レスポンシブデザイン

### ブレークポイント戦略
```javascript
// tailwind.config.js
module.exports = {
  theme: {
    screens: {
      'xs': '475px',
      'sm': '640px',
      'md': '768px',
      'lg': '1024px',
      'xl': '1280px',
      '2xl': '1536px',
      '3xl': '1920px',
    },
    extend: {
      spacing: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
      },
    },
  },
};
```

### レスポンシブレイアウト例
```tsx
// src/components/layout/Grid/Grid.tsx
interface GridProps {
  children: React.ReactNode;
  cols?: {
    xs?: number;
    sm?: number;
    md?: number;
    lg?: number;
    xl?: number;
  };
  gap?: number;
  className?: string;
}

export const Grid: React.FC<GridProps> = ({
  children,
  cols = { xs: 1, sm: 2, md: 3, lg: 4, xl: 6 },
  gap = 6,
  className = ''
}) => {
  const gridClasses = `
    grid gap-${gap}
    grid-cols-${cols.xs || 1}
    ${cols.sm ? `sm:grid-cols-${cols.sm}` : ''}
    ${cols.md ? `md:grid-cols-${cols.md}` : ''}
    ${cols.lg ? `lg:grid-cols-${cols.lg}` : ''}
    ${cols.xl ? `xl:grid-cols-${cols.xl}` : ''}
    ${className}
  `;

  return (
    <div className={gridClasses}>
      {children}
    </div>
  );
};
```

## アクセシビリティ

### フォーカス管理
```css
/* フォーカス管理 */
*:focus {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}

*:focus:not(:focus-visible) {
  outline: none;
}

*:focus-visible {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}
```

### 高コントラストモード対応
```css
@media (prefers-contrast: high) {
  :root {
    --color-primary-500: #0056b3;
    --color-neutral-700: #000000;
    --color-neutral-300: #666666;
  }
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
```

## 🖤 プレミアムプラン専用・黒光感デザインルール（必須）

### プレミアムプランの高級感演出原則
**プレミアムプラン（最高級）には黒を基調とした特別なデザインを適用し、他プランとの明確な差別化を図る**

### 🚨 プレミアム専用カラーパレット（必須実装）

#### メインカラー：深い黒のグラデーション
```tsx
// 🚨 必須：プレミアムプラン専用カラー定義
const PREMIUM_COLORS = {
  // 黒光グラデーション（メイン）
  mainGradient: 'bg-gradient-to-r from-gray-900 via-black to-gray-900',
  
  // レイヤーオーバーレイ
  layerOverlay: 'bg-gradient-to-r from-gray-800/20 via-transparent to-gray-800/20',
  
  // テキストグラデーション
  textGradient: 'bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent',
  
  // 境界線・装飾
  border: 'border-gray-700 hover:border-gray-500',
  
  // シャドウ
  shadow: 'shadow-2xl hover:shadow-3xl',
  
  // アクセント
  accent: 'text-gray-300',
  
  // 高級装飾円
  decoration: 'bg-gray-700/30'
} as const;
```

#### プレミアムヘッダーデザインテンプレート
```tsx
// ✅ 推奨：プレミアムプラン黒光ヘッダー
<div className="p-6 text-center bg-gradient-to-r from-gray-900 via-black to-gray-900 relative overflow-hidden">
  {/* レイヤー効果（深みの演出） */}
  <div className="absolute inset-0 bg-gradient-to-r from-gray-800/20 via-transparent to-gray-800/20"></div>
  
  {/* 装飾円（高級感アップ） */}
  <div className="absolute top-4 right-4 w-32 h-32 bg-gray-700/30 rounded-full blur-3xl"></div>
  <div className="absolute bottom-4 left-4 w-24 h-24 bg-gray-600/20 rounded-full blur-2xl"></div>
  
  {/* メインコンテンツ */}
  <div className="relative z-10">
    <h3 className="text-2xl font-bold text-white mb-2 tracking-wide">プレミアム</h3>
    <div className="text-3xl font-bold bg-gradient-to-r from-gray-100 to-white bg-clip-text text-transparent mb-1 tracking-tight">
      ¥18,800
    </div>
    <div className="text-gray-300 text-sm">月額</div>
    <p className="text-gray-300 text-sm mt-2 font-medium">最高級のトレーニング体験</p>
  </div>
</div>
```

#### プレミアム機能項目デザイン
```tsx
// ✅ 推奨：プレミアム機能の表示スタイル
<div className="p-4 text-center">
  <span className="text-gray-800 font-bold bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent border-b border-gray-800 pb-1">
    {機能項目テキスト}
  </span>
</div>
```

#### プレミアムCTAボタンデザイン
```tsx
// ✅ 推奨：プレミアム専用CTAボタン
<button className="w-full py-3 px-6 rounded-xl font-bold transition-all duration-300 transform hover:scale-105 bg-gradient-to-r from-gray-900 via-black to-gray-900 text-white border border-gray-700 hover:border-gray-500 shadow-2xl hover:shadow-3xl relative overflow-hidden group">
  {/* ホバー時の内部光沢効果 */}
  <div className="absolute inset-0 bg-gradient-to-r from-gray-800/50 via-transparent to-gray-800/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  
  {/* 底部グラデーションライン */}
  <div className="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-gray-400 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  
  {/* ボタンテキスト */}
  <span className="relative z-10 tracking-wide group-hover:tracking-wider transition-all duration-300">
    このプランを選ぶ
  </span>
</button>
```

### 🎯 プレミアムプラン実装チェックリスト（絶対必須）

#### 黒光感ヘッダー確認項目
```
🚨 プレミアムヘッダーの必須確認項目：
□ メイングラデーション（from-gray-900 via-black to-gray-900）が実装されているか
□ レイヤーオーバーレイ効果が適切に配置されているか
□ 装飾円が2つ適切に配置されているか（w-32 h-32, w-24 h-24）
□ プラン名が tracking-wide で実装されているか
□ 価格表示がグラデーションテキスト（from-gray-100 to-white）になっているか
□ 説明文が text-gray-300 で統一されているか
□ relative z-10 の階層構造が正しく実装されているか
□ 全体的に高級感・重厚感が演出されているか
```

#### 機能項目スタイル確認項目
```
🚨 プレミアム機能項目の必須確認項目：
□ テキストがグラデーション（from-gray-100 to-gray-200）になっているか
□ bg-clip-text text-transparent が適用されているか
□ 下線装飾（border-b border-gray-800）が実装されているか
□ font-bold でフォントの太さが強調されているか
□ 他プラン（ブルー・レッド）との明確な差別化ができているか
□ 全体的に洗練された印象を与えているか
```

#### CTAボタン確認項目
```
🚨 プレミアムCTAボタンの必須確認項目：
□ 黒光グラデーション背景（from-gray-900 via-black to-gray-900）が実装されているか
□ 境界線（border-gray-700 hover:border-gray-500）が適切に設定されているか
□ 多層シャドウ（shadow-2xl hover:shadow-3xl）が実装されているか
□ ホバー時の内部光沢効果が実装されているか
□ 底部グラデーションライン効果が実装されているか
□ 文字のトラッキング変化（tracking-wide → tracking-wider）が実装されているか
□ group クラスによるホバーアニメーションが正しく動作するか
□ 全体的に最高級の印象を与えるデザインになっているか
```

### 🔄 プレミアムプラン色彩対比原則

#### 3プラン色彩戦略
```tsx
// 🚨 必須：3プランの明確な色分け戦略
const PLAN_COLORS = {
  basic: {
    name: 'ベーシック',
    theme: 'ブルー系（信頼感・安定感）',
    colors: {
      header: 'bg-gradient-to-r from-blue-600 to-blue-700',
      text: 'text-blue-600',
      button: 'border-blue-600 text-blue-600 hover:bg-blue-600'
    }
  },
  
  standard: {
    name: 'スタンダード',
    theme: 'レッド系（人気・エネルギー）',
    colors: {
      header: 'bg-gradient-to-r from-red-600 to-red-700',
      text: 'text-red-600',
      button: 'bg-gradient-to-r from-red-600 to-red-700 text-white',
      badge: '人気No.1'
    }
  },
  
  premium: {
    name: 'プレミアム',
    theme: '黒系（高級感・排他性）',
    colors: {
      header: 'bg-gradient-to-r from-gray-900 via-black to-gray-900',
      text: 'text-gray-800 bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent',
      button: 'bg-gradient-to-r from-gray-900 via-black to-gray-900 text-white border-gray-700',
      accent: 'text-gray-300'
    }
  }
} as const;
```

### 🏆 プレミアムブランディング効果

#### プレミアムプランの心理的効果
- **排他性の演出**: 黒の重厚感で特別感を創出
- **高級感の視覚化**: グラデーション・シャドウで品質の高さを表現
- **信頼性の向上**: 洗練されたデザインで安心感を提供
- **購買意欲の促進**: 他プランとの明確な差別化で価値を実感

## 📱 フローティングバナー実装ルール（必須）

### フローティングバナーの基本原則
**画面右端固定のアクションバナーで重要な行動誘導を効果的に実現**

### 🚨 フローティングバナー実装要件（絶対遵守）

#### 必須配置・表示仕様
- **配置位置**: 画面右端ピッタリ（right-0）
- **表示タイミング**: FV即座表示（スクロール制御なし）
- **レイアウト**: 縦並び（アイコン上 + テキスト下）
- **間隔**: 最小化（space-y-1）
- **角丸**: 左側のみ（rounded-l-xl）
- **固定位置**: fixed bottom-4 right-0

#### 推奨アクション構成
```tsx
// 🚨 必須：フローティングバナーの基本構成
const FLOATING_ACTIONS = [
  {
    type: 'line',
    label: 'LINE公式',
    icon: 'MessageCircle', // カスタムSVG推奨
    gradient: 'from-green-500 to-green-600',
    textColor: 'text-green-50',
    href: 'https://line.me/...'
  },
  {
    type: 'booking',
    label: '体験予約',
    icon: 'Calendar',
    gradient: 'from-red-500 to-red-600',
    textColor: 'text-red-50',
    href: '/booking'
  },
  {
    type: 'contact',
    label: 'お問い合わせ',
    icon: 'Mail',
    gradient: 'from-gray-500 to-gray-600',
    textColor: 'text-gray-50',
    href: '/contact'
  }
] as const;
```

#### 完璧なフローティングバナーテンプレート
```tsx
// ✅ 推奨：フローティングバナー完全実装
export const FloatingActions: React.FC = () => {
  return (
    <div className="fixed bottom-4 right-0 z-50 space-y-1">
      {FLOATING_ACTIONS.map((action, index) => (
        <a
          key={action.type}
          href={action.href}
          className={`
            flex flex-col items-center py-3 px-4 
            bg-gradient-to-b ${action.gradient}
            ${action.textColor} 
            rounded-l-xl shadow-lg hover:shadow-xl
            transition-all duration-300 transform 
            hover:scale-105 hover:-translate-x-1
            min-w-[80px]
          `}
        >
          {/* アイコン（上） */}
          <div className="mb-1">
            {/* カスタムSVGアイコン推奨 */}
            <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              {/* アイコンパス */}
            </svg>
          </div>
          
          {/* テキスト（下） */}
          <span className="text-xs font-medium text-center leading-tight">
            {action.label}
          </span>
        </a>
      ))}
    </div>
  );
};
```

### 🎯 フローティングバナー実装チェックリスト（必須）

#### 配置・表示確認項目
```
🚨 フローティングバナーの必須確認項目：
□ fixed bottom-4 right-0 で画面右端に固定されているか
□ right-0 で画面右端ピッタリに配置されているか
□ z-50 で他要素より前面に表示されているか
□ space-y-1 で縦間隔が最小化されているか
□ rounded-l-xl で左側のみ角丸になっているか
□ FV表示時点で即座に表示されているか（スクロール制御なし）
□ 3つのアクション（LINE、予約、お問い合わせ）が適切に配置されているか
□ 各バナーの色分けが明確になっているか（緑、赤、グレー）
```

#### レイアウト・デザイン確認項目
```
🚨 フローティングバナーレイアウトの必須確認項目：
□ 縦並びレイアウト（flex flex-col）が実装されているか
□ アイコンが上、テキストが下の配置になっているか
□ items-center で中央揃えが適用されているか
□ text-center でテキストが中央揃えになっているか
□ 縦方向グラデーション（bg-gradient-to-b）が適用されているか
□ ホバー効果（hover:scale-105, hover:-translate-x-1）が実装されているか
□ min-w-[80px] で最小幅が確保されているか
□ カスタムSVGアイコンが使用されているか
```

### 🚨 フローティングバナー修正履歴・学習事項

#### 第1回修正：表示タイミング・位置調整
- **問題**: スクロール制御により初期表示されない
- **解決**: useState/useEffect削除でFV即座表示実現
- **位置調整**: right-4-6px → right-0（画面右端ピッタリ）

#### 第2回修正：レイアウト変更
- **問題**: 横並びレイアウトの隙間・配置問題
- **解決**: 縦並びレイアウト（flex-col）採用
- **改善点**: space-y-1で間隔最小化、縦グラデーション採用

#### 学習事項・今後の指針
- **即座表示**: FV表示と同時のバナー表示が必須
- **画面端配置**: right-0での完全右端配置が理想的
- **縦レイアウト**: アイコン上・テキスト下の縦構成が最適
- **ユーザビリティ**: 参考サイトのスクリーンショット活用が効果的

## デザインチェックリスト

### 必須確認項目
- [ ] 高級感のあるデザインが実装されているか
- [ ] 十分な余白が確保されているか（24px以上推奨）
- [ ] チープなアイコンが使用されていないか
- [ ] プレミアムフォント（Inter, Playfair Display）が使用されているか
- [ ] グラデーション・シャドウが品よく使用されているか
- [ ] アニメーションが滑らかで自然か
- [ ] レスポンシブデザインが適切に実装されているか
- [ ] アクセシビリティ要件を満たしているか
- [ ] ダークモード対応がされているか
- [ ] カラーコントラストが適切か
- [ ] タッチターゲットが44px以上か
- [ ] ローディング状態が適切に表示されるか
### 🍽️ メニューセクション商品画像の絶対実装ルール（必須）

#### メニューアイテム画像の必須要件
**全てのメニューアイテムには必ず高品質な商品画像を配置すること**
- 画像なしのメニューアイテムは絶対禁止
- テキストのみのメニュー表示は絶対禁止
- プレースホルダー画像の長期使用は禁止

#### 推奨画像仕様・品質基準
```tsx
// 🚨 必須：MenuItemインターフェース（画像URL必須）
interface MenuItem {
  name: string;
  description: string;
  price: string;
  category: 'coffee' | 'tea' | 'food' | 'dessert';
  isPopular?: boolean;
  imageUrl: string; // 🚨 必須プロパティ
}

// ✅ 推奨：高品質画像の実装パターン
const menuItems: MenuItem[] = [
  {
    name: 'エスプレッソ',
    description: '深煎り豆を使用した濃厚なエスプレッソ',
    price: '¥380',
    category: 'coffee',
    isPopular: true,
    imageUrl: 'https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80', // 高品質Unsplash画像
  }
];
```

#### 画像表示レイアウトの絶対ルール
```tsx
// ✅ 推奨：メニューアイテム画像レイアウト
<div className="group relative bg-white/80 backdrop-blur-sm rounded-2xl overflow-hidden shadow-sm hover:shadow-xl transition-all duration-500 transform hover:-translate-y-2 border border-gray-100">
  {/* 🚨 必須：商品画像エリア */}
  <div className="relative h-48 overflow-hidden">
    <img
      src={item.imageUrl}
      alt={item.name}
      className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
      loading="lazy"
    />
    <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
  </div>
  
  {/* アイテム情報 */}
  <div className="p-6">
    {/* テキスト情報 */}
  </div>
</div>
```

#### 画像品質・パフォーマンス要件
- **解像度**: 最小600x400px、推奨800x600px以上
- **アスペクト比**: 4:3または16:9推奨
- **ファイル形式**: WebP推奨、JPEGフォールバック
- **ファイルサイズ**: 各画像200KB以下（最適化必須）
- **読み込み**: `loading="lazy"` 必須実装
- **alt属性**: 商品名を適切に設定

#### カテゴリー別画像選定ガイドライン
```tsx
const imageCategories = {
  coffee: {
    keywords: 'espresso,latte,cappuccino,americano,coffee,cafe',
    style: '温かみのある照明、美しいラテアート、上質なカップ',
    避けるべき: 'チープなマグカップ、蛍光灯照明、背景雑然'
  },
  tea: {
    keywords: 'tea,matcha,earl-grey,herbal,teacup,elegant',
    style: 'エレガントなティーカップ、美しい茶葉、上品な背景',
    避けるべき: 'ティーバッグ、プラスチック容器、安っぽい演出'
  },
  food: {
    keywords: 'croissant,sandwich,quiche,bakery,fresh,artisan',
    style: '新鮮さが伝わる、手作り感、温かみのある照明',
    避けるべき: '冷凍食品感、人工的な色合い、安っぽい盛り付け'
  },
  dessert: {
    keywords: 'tiramisu,cheesecake,tart,dessert,elegant,premium',
    style: '上品な盛り付け、美しい断面、高級感のある器',
    避けるべき: 'チープな飾り付け、人工的な色、雑な盛り付け'
  }
};
```

#### メニュー画像実装チェックリスト
```
🚨 メニュー画像の絶対確認項目：
□ 全メニューアイテムに imageUrl プロパティが設定されているか
□ 全画像が実際に表示されているか（ブラウザで目視確認必須）
□ 画像の高さが統一されているか（h-48固定）
□ object-cover が適用されているか
□ ホバー時のズーム効果（scale-110）が実装されているか
□ loading="lazy" が設定されているか
□ alt属性が適切に設定されているか
□ 人気マークが画像上に適切に配置されているか（top-4 right-4 z-10）
□ 画像とテキストが美しく分離されているか
□ 全体的に高級感のあるレイアウトになっているか
□ レスポンシブ対応が適切に実装されているか
□ 画像読み込みエラー時の対応が実装されているか
```

### 🚨 カフェHP専用チェック項目
- [ ] **セクション見出しが英語表記になっているか**（ABOUT US, OUR MENU等）
- [ ] **見出しに背景色・装飾が使用されていないか**（シンプルなテキストのみ）
- [ ] **カフェテーマのカラーパレット（amber系）が適切に使用されているか**
- [ ] **絵文字が完全に削除されているか**（全セクション確認必須）
- [ ] **カードデザインが排除されているか**（自然な流れのレイアウト採用）
- [ ] **FVの色付きアイコン・装飾要素が完全に削除されているか**（営業中・WiFi・電源等）
- [ ] **FVの営業時間・ロケーション情報が削除されているか**（原宿・表参道等）
- [ ] **FVに高級感のある縦線スクロールアニメーションが実装されているか**
- [ ] **丸いスクロールアイコン・矢印等が削除されているか**
- [ ] **チープなフローティングボタンが完全に削除されているか**（特にオレンジ色）
- [ ] **絵文字アイコンボタン（⬆️、📧等）が削除されているか**
- [ ] **animate-bounce等の安っぽいアニメーションが削除されているか**
- [ ] **チープな色使い（オレンジ・緑・明るい青等）が排除されているか**
- [ ] **角丸四角形アイコン（w-12 h-12 rounded-xl等）が完全に削除されているか**
- [ ] **背景色付きグラデーションアイコンが削除されているか**
- [ ] **エレガントなテキスト統合デザインが実装されているか**
- [ ] **🍽️ 全メニューアイテムに高品質な商品画像が配置されているか**（絶対必須）
- [ ] **メニュー画像のレイアウトが統一されているか**（h-48, object-cover等）
- [ ] **🏷️ カテゴリータブに絵文字・カードデザインが使用されていないか**（絶対禁止）
- [ ] **カテゴリータブがシンプルな下線デザインになっているか**（border-b-2推奨）
- [ ] **カフェらしい温かみと高級感が両立されているか**
### 🚨 ジムHP専用チェック項目（gymnasiumプロジェクト）
- [ ] **セクション見出しが英語表記になっているか**（ABOUT US, PROGRAMS, TRAINERS, FACILITIES, MEMBERSHIP等）
- [ ] **HeroSectionでfont-serifが使用されているか**（明朝体フォント変更対応）
- [ ] **「あなたの限界を超えていこう」等のメッセージが明朝体で表示されているか**
- [ ] **プレミアムプランの黒光感デザインが実装されているか**（深い黒グラデーション）
- [ ] **3プランの色分けが明確になっているか**（ベーシック：ブルー、スタンダード：レッド、プレミアム：黒）
- [ ] **フローティングバナーが画面右端に正しく配置されているか**（right-0, FV即座表示）
- [ ] **フローティングバナーが縦並びレイアウトになっているか**（アイコン上、テキスト下）
- [ ] **LINE公式・体験予約・お問い合わせの3つのアクションが配置されているか**
- [ ] **フローティングバナーの色分けが適切になっているか**（緑、赤、グレー）
- [ ] **角丸四角形アイコン・絵文字が完全に削除されているか**（全セクション確認）
- [ ] **高級感・重厚感のあるジムブランディングが実現されているか**
- [ ] **トレーナー・施設・プログラム紹介が品格のあるデザインになっているか**
- [ ] **Footer部分のチープなフローティングボタンが削除されているか**（オレンジ色ボタン禁止）
- [ ] **ジムテーマに適したカラーパレットが使用されているか**
- [ ] **全体的に高級プライベートジムの印象を与えているか**

## 🖤 プレミアムプラン専用・黒光感デザインルール（必須）

### プレミアムプランの高級感演出原則
**プレミアムプラン（最高級）には黒を基調とした特別なデザインを適用し、他プランとの明確な差別化を図る**

### 🚨 プレミアム専用カラーパレット（必須実装）

#### メインカラー：深い黒のグラデーション
```tsx
// 🚨 必須：プレミアムプラン専用カラー定義
const PREMIUM_COLORS = {
  // 黒光グラデーション（メイン）
  mainGradient: 'bg-gradient-to-r from-gray-900 via-black to-gray-900',
  
  // レイヤーオーバーレイ
  layerOverlay: 'bg-gradient-to-r from-gray-800/20 via-transparent to-gray-800/20',
  
  // テキストグラデーション
  textGradient: 'bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent',
  
  // 境界線・装飾
  border: 'border-gray-700 hover:border-gray-500',
  
  // シャドウ
  shadow: 'shadow-2xl hover:shadow-3xl',
  
  // アクセント
  accent: 'text-gray-300',
  
  // 高級装飾円
  decoration: 'bg-gray-700/30'
} as const;
```

#### プレミアムヘッダーデザインテンプレート
```tsx
// ✅ 推奨：プレミアムプラン黒光ヘッダー
<div className="p-6 text-center bg-gradient-to-r from-gray-900 via-black to-gray-900 relative overflow-hidden">
  {/* レイヤー効果（深みの演出） */}
  <div className="absolute inset-0 bg-gradient-to-r from-gray-800/20 via-transparent to-gray-800/20"></div>
  
  {/* 装飾円（高級感アップ） */}
  <div className="absolute top-4 right-4 w-32 h-32 bg-gray-700/30 rounded-full blur-3xl"></div>
  <div className="absolute bottom-4 left-4 w-24 h-24 bg-gray-600/20 rounded-full blur-2xl"></div>
  
  {/* メインコンテンツ */}
  <div className="relative z-10">
    <h3 className="text-2xl font-bold text-white mb-2 tracking-wide">プレミアム</h3>
    <div className="text-3xl font-bold bg-gradient-to-r from-gray-100 to-white bg-clip-text text-transparent mb-1 tracking-tight">
      ¥18,800
    </div>
    <div className="text-gray-300 text-sm">月額</div>
    <p className="text-gray-300 text-sm mt-2 font-medium">最高級のトレーニング体験</p>
  </div>
</div>
```

#### プレミアム機能項目デザイン
```tsx
// ✅ 推奨：プレミアム機能の表示スタイル
<div className="p-4 text-center">
  <span className="text-gray-800 font-bold bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent border-b border-gray-800 pb-1">
    {機能項目テキスト}
  </span>
</div>
```

#### プレミアムCTAボタンデザイン
```tsx
// ✅ 推奨：プレミアム専用CTAボタン
<button className="w-full py-3 px-6 rounded-xl font-bold transition-all duration-300 transform hover:scale-105 bg-gradient-to-r from-gray-900 via-black to-gray-900 text-white border border-gray-700 hover:border-gray-500 shadow-2xl hover:shadow-3xl relative overflow-hidden group">
  {/* ホバー時の内部光沢効果 */}
  <div className="absolute inset-0 bg-gradient-to-r from-gray-800/50 via-transparent to-gray-800/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  
  {/* 底部グラデーションライン */}
  <div className="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-gray-400 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  
  {/* ボタンテキスト */}
  <span className="relative z-10 tracking-wide group-hover:tracking-wider transition-all duration-300">
    このプランを選ぶ
  </span>
</button>
```

### 🎯 プレミアムプラン実装チェックリスト（絶対必須）

#### 黒光感ヘッダー確認項目
```
🚨 プレミアムヘッダーの必須確認項目：
□ メイングラデーション（from-gray-900 via-black to-gray-900）が実装されているか
□ レイヤーオーバーレイ効果が適切に配置されているか
□ 装飾円が2つ適切に配置されているか（w-32 h-32, w-24 h-24）
□ プラン名が tracking-wide で実装されているか
□ 価格表示がグラデーションテキスト（from-gray-100 to-white）になっているか
□ 説明文が text-gray-300 で統一されているか
□ relative z-10 の階層構造が正しく実装されているか
□ 全体的に高級感・重厚感が演出されているか
```

#### 機能項目スタイル確認項目
```
🚨 プレミアム機能項目の必須確認項目：
□ テキストがグラデーション（from-gray-100 to-gray-200）になっているか
□ bg-clip-text text-transparent が適用されているか
□ 下線装飾（border-b border-gray-800）が実装されているか
□ font-bold でフォントの太さが強調されているか
□ 他プラン（ブルー・レッド）との明確な差別化ができているか
□ 全体的に洗練された印象を与えているか
```

#### CTAボタン確認項目
```
🚨 プレミアムCTAボタンの必須確認項目：
□ 黒光グラデーション背景（from-gray-900 via-black to-gray-900）が実装されているか
□ 境界線（border-gray-700 hover:border-gray-500）が適切に設定されているか
□ 多層シャドウ（shadow-2xl hover:shadow-3xl）が実装されているか
□ ホバー時の内部光沢効果が実装されているか
□ 底部グラデーションライン効果が実装されているか
□ 文字のトラッキング変化（tracking-wide → tracking-wider）が実装されているか
□ group クラスによるホバーアニメーションが正しく動作するか
□ 全体的に最高級の印象を与えるデザインになっているか
```

### 🔄 プレミアムプラン色彩対比原則

#### 3プラン色彩戦略
```tsx
// 🚨 必須：3プランの明確な色分け戦略
const PLAN_COLORS = {
  basic: {
    name: 'ベーシック',
    theme: 'ブルー系（信頼感・安定感）',
    colors: {
      header: 'bg-gradient-to-r from-blue-600 to-blue-700',
      text: 'text-blue-600',
      button: 'border-blue-600 text-blue-600 hover:bg-blue-600'
    }
  },
  
  standard: {
    name: 'スタンダード',
    theme: 'レッド系（人気・エネルギー）',
    colors: {
      header: 'bg-gradient-to-r from-red-600 to-red-700',
      text: 'text-red-600',
      button: 'bg-gradient-to-r from-red-600 to-red-700 text-white',
      badge: '人気No.1'
    }
  },
  
  premium: {
    name: 'プレミアム',
    theme: '黒系（高級感・排他性）',
    colors: {
      header: 'bg-gradient-to-r from-gray-900 via-black to-gray-900',
      text: 'text-gray-800 bg-gradient-to-r from-gray-100 to-gray-200 bg-clip-text text-transparent',
      button: 'bg-gradient-to-r from-gray-900 via-black to-gray-900 text-white border-gray-700',
      accent: 'text-gray-300'
    }
  }
} as const;
```

### 🏆 プレミアムブランディング効果

#### プレミアムプランの心理的効果
- **排他性の演出**: 黒の重厚感で特別感を創出
- **高級感の視覚化**: グラデーション・シャドウで品質の高さを表現
- **信頼性の向上**: 洗練されたデザインで安心感を提供
- **購買意欲の促進**: 他プランとの明確な差別化で価値を実感

この黒光感デザインルールにより、プレミアムプランが他の2プラン（ブルー・レッド）と明確に差別化され、真の「最高級」としての印象を与えることができます。
### 🦷 歯科医院専用セクション見出しルール（必須）

#### 歯科医院見出しの基本原則
**歯科医院サイトの見出しは清潔感・安心感・専門性を表現し、患者の信頼を獲得する**

#### 🚨 歯科医院専用英語見出し一覧（必須実装）
```tsx
// 🚨 必須：歯科医院セクション見出しの英語表記
const DENTAL_SECTION_HEADINGS = {
  // 診療理念・コンセプト
  philosophy: "ORAL HEALTH PHILOSOPHY",      // ❌ 「診療理念」
  concept: "DENTAL VISION",                  // ❌ 「コンセプト」
  approach: "PATIENT-CENTERED APPROACH",     // ❌ 「アプローチ」
  
  // 診療内容・サービス
  services: "COMPREHENSIVE DENTAL CARE",     // ❌ 「診療内容」
  treatment: "ORAL TREATMENT",               // ❌ 「治療メニュー」
  speciality: "SPECIALIZED DENTISTRY",       // ❌ 「専門治療」
  prevention: "PREVENTIVE CARE",             // ❌ 「予防歯科」
  
  // 医師・スタッフ
  team: "EXPERT DENTAL TEAM",               // ❌ 「スタッフ紹介」
  doctors: "DENTAL PROFESSIONALS",          // ❌ 「医師紹介」
  specialists: "ORAL HEALTH SPECIALISTS",   // ❌ 「専門医」
  
  // 設備・技術
  facilities: "ADVANCED TECHNOLOGY",        // ❌ 「設備紹介」
  equipment: "MODERN FACILITIES",           // ❌ 「医療機器」
  digital: "DIGITAL DENTISTRY",             // ❌ 「デジタル歯科」
  
  // 予約・相談・アクセス
  consultation: "DENTAL CONSULTATION",      // ❌ 「ご相談」
  appointment: "APPOINTMENT & CONSULTATION", // ❌ 「予約」
  access: "CLINIC ACCESS & INFO",           // ❌ 「アクセス」
  contact: "PATIENT CARE",                  // ❌ 「お問い合わせ」
} as const;
```

#### 🎨 歯科医院専用見出しデザインパターン

#### パターン1: シンプルクリーンデザイン（推奨・現在実装済み）
```tsx
// ✅ 推奨：歯科医院シンプルクリーン見出し（実装済みパターン）
export const DentalSectionHeadingClean: React.FC<{ title: string }> = ({ title }) => (
  <div className="text-center mb-16">
    {/* 上部装飾 - 自然なグラデーション */}
    <div className="flex justify-center mb-4">
      <div className="flex items-center space-x-1">
        <div className="w-3 h-0.5 bg-gradient-to-r from-transparent to-teal-400 rounded-full"></div>
        <div className="w-2 h-2 bg-teal-500 rounded-full"></div>
        <div className="w-8 h-0.5 bg-gradient-to-r from-teal-400 via-cyan-500 to-emerald-400 rounded-full"></div>
        <div className="w-2 h-2 bg-cyan-500 rounded-full"></div>
        <div className="w-3 h-0.5 bg-gradient-to-r from-emerald-400 to-transparent rounded-full"></div>
      </div>
    </div>
    
    {/* メイン見出し - グラデーションテキスト */}
    <h2 className="text-lg font-bold tracking-[0.15em] text-transparent bg-gradient-to-r from-teal-700 via-cyan-600 to-emerald-600 bg-clip-text uppercase">
      {title}
    </h2>
    
    {/* 下部ライン - 光る効果 */}
    <div className="mt-4 flex justify-center">
      <div className="w-16 h-0.5 bg-gradient-to-r from-teal-300 via-cyan-400 to-emerald-300 rounded-full relative">
        <div className="absolute inset-0 bg-gradient-to-r from-teal-200 via-cyan-300 to-emerald-200 rounded-full blur-sm"></div>
      </div>
    </div>
  </div>
);
```

#### パターン2: メディカルプロフェッショナルデザイン
```tsx
// ✅ 推奨：歯科医院メディカル見出し（プロフェッショナル版）
export const DentalSectionHeadingMedical: React.FC<{ title: string }> = ({ title }) => (
  <div className="text-center mb-20">
    {/* メディカルアイコン */}
    <div className="relative inline-flex flex-col items-center mb-8">
      <div className="w-16 h-16 bg-gradient-to-br from-teal-500 to-cyan-600 rounded-full flex items-center justify-center mb-4 shadow-lg">
        {/* 歯科アイコン */}
        <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 2C8.69 2 6 4.69 6 8v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V8c0-3.31-2.69-6-6-6zm4 14H8V8c0-2.21 1.79-4 4-4s4 1.79 4 4v8z"/>
        </svg>
      </div>
      
      {/* メイン見出し */}
      <h2 className="text-sm font-semibold tracking-[0.2em] text-teal-800 uppercase mb-2">
        {title}
      </h2>
      
      {/* メディカルライン */}
      <div className="w-24 h-px bg-gradient-to-r from-transparent via-teal-400 to-transparent"></div>
      
      {/* パルス効果 */}
      <div className="flex space-x-2 mt-4">
        <div className="w-1 h-1 bg-teal-400 rounded-full animate-pulse"></div>
        <div className="w-1.5 h-1.5 bg-cyan-500 rounded-full animate-pulse" style={{animationDelay: '0.5s'}}></div>
        <div className="w-1 h-1 bg-emerald-400 rounded-full animate-pulse" style={{animationDelay: '1s'}}></div>
      </div>
    </div>
  </div>
);
```

#### 🎯 歯科医院カラーパレット（ティール・シアン・エメラルド）

#### 歯科医院専用カラー定義
```tsx
// 🚨 必須：歯科医院専用カラーパレット
const DENTAL_COLORS = {
  // メインカラー：ティール系（信頼感・清潔感）
  primary: {
    50: '#f0fdfa',
    100: '#ccfbf1',
    200: '#99f6e4',
    300: '#5eead4',
    400: '#2dd4bf',  // メインティール
    500: '#14b8a6',
    600: '#0d9488',
    700: '#0f766e',  // 濃いティール
    800: '#115e59',
    900: '#134e4a',
  },
  
  // セカンダリカラー：シアン系（清新感・先進性）
  secondary: {
    50: '#ecfeff',
    100: '#cffafe',
    200: '#a5f3fc',
    300: '#67e8f9',
    400: '#22d3ee',  // メインシアン
    500: '#06b6d4',
    600: '#0891b2',  // 濃いシアン
    700: '#0e7490',
    800: '#155e75',
    900: '#164e63',
  },
  
  // アクセントカラー：エメラルド系（自然・安心感）
  accent: {
    50: '#ecfdf5',
    100: '#d1fae5',
    200: '#a7f3d0',
    300: '#6ee7b7',
    400: '#34d399',  // メインエメラルド
    500: '#10b981',
    600: '#059669',  // 濃いエメラルド
    700: '#047857',
    800: '#065f46',
    900: '#064e3b',
  },
  
  // グラデーション定義
  gradients: {
    main: 'bg-gradient-to-r from-teal-700 via-cyan-600 to-emerald-600',
    soft: 'bg-gradient-to-r from-teal-400 via-cyan-500 to-emerald-400',
    light: 'bg-gradient-to-r from-teal-200 via-cyan-300 to-emerald-200',
    text: 'text-transparent bg-gradient-to-r from-teal-700 via-cyan-600 to-emerald-600 bg-clip-text'
  }
} as const;
```

#### 🎨 歯科医院専用デザインシステム

#### 装飾要素ライブラリ
```tsx
// 歯科医院専用装飾コンポーネント
export const DentalDecorations = {
  // 上部装飾ライン
  topLine: (
    <div className="flex items-center space-x-1">
      <div className="w-3 h-0.5 bg-gradient-to-r from-transparent to-teal-400 rounded-full"></div>
      <div className="w-2 h-2 bg-teal-500 rounded-full"></div>
      <div className="w-8 h-0.5 bg-gradient-to-r from-teal-400 via-cyan-500 to-emerald-400 rounded-full"></div>
      <div className="w-2 h-2 bg-cyan-500 rounded-full"></div>
      <div className="w-3 h-0.5 bg-gradient-to-r from-emerald-400 to-transparent rounded-full"></div>
    </div>
  ),
  
  // 光るライン
  glowLine: (
    <div className="w-16 h-0.5 bg-gradient-to-r from-teal-300 via-cyan-400 to-emerald-300 rounded-full relative">
      <div className="absolute inset-0 bg-gradient-to-r from-teal-200 via-cyan-300 to-emerald-200 rounded-full blur-sm"></div>
    </div>
  ),
  
  // パルスドット
  pulseDots: (
    <div className="flex space-x-2">
      <div className="w-1 h-1 bg-teal-400 rounded-full animate-pulse"></div>
      <div className="w-1.5 h-1.5 bg-cyan-500 rounded-full animate-pulse" style={{animationDelay: '0.5s'}}></div>
      <div className="w-1 h-1 bg-emerald-400 rounded-full animate-pulse" style={{animationDelay: '1s'}}></div>
    </div>
  ),
  
  // 歯科アイコン
  dentalIcon: (
    <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
      <path d="M12 2C8.69 2 6 4.69 6 8v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V8c0-3.31-2.69-6-6-6zm4 14H8V8c0-2.21 1.79-4 4-4s4 1.79 4 4v8z"/>
    </svg>
  )
} as const;
```

#### 🚨 歯科医院見出し実装チェックリスト（絶対必須）

#### シンプルクリーンデザイン確認項目
```
🚨 歯科医院シンプル見出しの必須確認項目：
□ セクション見出しが英語表記になっているか（DENTAL CONSULTATION等）
□ 上部装飾ラインが正しく実装されているか（5つの要素配置）
□ メイン見出しがグラデーションテキストになっているか（from-teal-700 via-cyan-600 to-emerald-600）
□ text-transparent bg-clip-text が適用されているか
□ tracking-[0.15em] でレタースペーシングが調整されているか
□ 下部光るラインが実装されているか（blur-sm効果付き）
□ ティール・シアン・エメラルドの3色グラデーションが統一されているか
□ text-center mb-16 で適切なレイアウトになっているか
□ 全体的に清潔感・安心感が演出されているか
□ 他のセクション見出しと一貫性が保たれているか
```

#### メディカルプロフェッショナルデザイン確認項目
```
🚨 歯科医院メディカル見出しの必須確認項目：
□ メディカルアイコンが適切に配置されているか（w-16 h-16円形背景）
□ 歯科専用アイコン（SVG）が実装されているか
□ グラデーション背景（from-teal-500 to-cyan-600）が実装されているか
□ メディカルライン（透明グラデーション）が配置されているか
□ パルス効果（3段階のアニメーション遅延）が実装されているか
□ shadow-lg でアイコンに適度な影効果があるか
□ 見出し全体の高さが適切（mb-20）に調整されているか
□ プロフェッショナルな印象を与えているか
```

#### カラーパレット確認項目
```
🚨 歯科医院カラーパレットの必須確認項目：
□ ティール系（teal-400, teal-500, teal-700）が基調色として使用されているか
□ シアン系（cyan-500, cyan-600）がアクセントとして使用されているか
□ エメラルド系（emerald-400, emerald-600）が補色として使用されているか
□ 3色のグラデーション（from-teal via-cyan to-emerald）が統一されているか
□ 従来のブルー単色系から変更されているか
□ 清潔感・信頼感・専門性が視覚的に表現されているか
□ 全セクションで一貫したカラーパレットが使用されているか
```

### 🦷 歯科医院ブランディング効果

#### カラー心理学的効果
- **ティール（主色）**: 信頼感・安定感・プロフェッショナリズム
- **シアン（副色）**: 清潔感・先進性・革新性  
- **エメラルド（accent）**: 自然・安心感・健康

#### 患者への心理的効果
- **安心感の醸成**: 清潔で信頼できる医療環境の印象
- **専門性の表現**: 最新技術と専門知識を持つクリニックの印象
- **親しみやすさ**: 堅すぎず、患者が相談しやすい雰囲気の創出

この歯科医院専用見出しデザインルールにより、患者の信頼を獲得し、専門性と親しみやすさを両立した歯科クリニックサイトを実現できます。

## 💅 美容院専用デザインシステム（必須）

### 美容院ブランディング原則
**美容院サイトは上品さ・エレガンス・女性らしさを表現し、顧客の美への憧れを喚起する**

### 🌸 美容院専用カラーパレット（必須実装）

#### メインカラー：ローズ・ピンク・パープル系
```tsx
// 🚨 必須：美容院専用カラーパレット
const BEAUTY_SALON_COLORS = {
  // メインカラー：ローズ系（エレガンス・女性らしさ）
  primary: {
    50: '#fdf2f8',
    100: '#fce7f3',
    200: '#fbcfe8',
    300: '#f9a8d4',
    400: '#f472b6',  // メインローズ
    500: '#ec4899',
    600: '#db2777',
    700: '#be185d',  // 濃いローズ
    800: '#9d174d',
    900: '#831843',
  },
  
  // セカンダリカラー：ピンク系（優雅・温かみ）
  secondary: {
    50: '#fdf2f8',
    100: '#fce7f3',
    200: '#fbcfe8',
    300: '#f9a8d4',
    400: '#f472b6',
    500: '#ec4899',  // メインピンク
    600: '#db2777',
    700: '#be185d',
    800: '#9d174d',
    900: '#831843',
  },
  
  // アクセントカラー：パープル系（高級感・神秘性）
  accent: {
    50: '#faf5ff',
    100: '#f3e8ff',
    200: '#e9d5ff',
    300: '#d8b4fe',
    400: '#c084fc',  // メインパープル
    500: '#a855f7',
    600: '#9333ea',  // 濃いパープル
    700: '#7c3aed',
    800: '#6b21a8',
    900: '#581c87',
  },
  
  // グラデーション定義
  gradients: {
    main: 'bg-gradient-to-r from-rose-700 via-pink-600 to-purple-600',
    soft: 'bg-gradient-to-r from-rose-400 via-pink-500 to-purple-400',
    light: 'bg-gradient-to-r from-rose-200 via-pink-300 to-purple-200',
    text: 'text-transparent bg-gradient-to-r from-rose-700 via-pink-600 to-purple-600 bg-clip-text'
  }
} as const;
```

### 🏷️ 美容院専用セクション見出しルール（必須）

#### 美容院見出しの基本原則
**美容院サイトの見出しは明朝体の美しさを活かし、装飾に頼らない上品なデザインを採用**

#### 🚨 美容院専用英語見出し一覧（必須実装）
```tsx
// 🚨 必須：美容院セクション見出しの英語表記
const BEAUTY_SALON_SECTION_HEADINGS = {
  // 基本セクション
  about: "ABOUT US",              // ❌ 「私たちについて」
  services: "SERVICES",           // ❌ 「サービス」
  menu: "BEAUTY MENU",            // ❌ 「メニュー」
  gallery: "GALLERY",             // ❌ 「ギャラリー」
  contact: "CONTACT",             // ❌ 「お問い合わせ」
  
  // 美容院専用セクション
  concept: "BEAUTY CONCEPT",      // ❌ 「コンセプト」
  stylist: "PROFESSIONAL STYLISTS", // ❌ 「スタイリスト」
  treatment: "BEAUTY TREATMENT",   // ❌ 「トリートメント」
  bridal: "BRIDAL BEAUTY",        // ❌ 「ブライダル」
  access: "SALON ACCESS",         // ❌ 「アクセス」
  reservation: "RESERVATION",     // ❌ 「ご予約」
} as const;
```

#### 🎨 美容院専用見出しデザイン（明朝体・装飾なし）

#### 現在実装済み：シンプル明朝体デザイン
```tsx
// ✅ 推奨：美容院専用見出し（現在実装済み・明朝体のみ）
export const BeautySalonSectionHeading: React.FC<{ title: string; subtitle?: string; description?: string }> = ({ 
  title, 
  subtitle, 
  description 
}) => {
  return (
    <div className="text-center mb-16 animate-fade-in">
      {/* 英語見出し - エレガントな明朝体 */}
      <h3 className="font-playfair text-lg md:text-xl lg:text-2xl font-light tracking-[0.15em] text-rose-700 uppercase mb-3 relative">
        {title}
      </h3>
      
      {/* サブタイトル（日本語）- 美しい明朝体 */}
      {subtitle && (
        <h2 className="font-playfair text-3xl md:text-4xl lg:text-5xl font-normal text-gray-800 mb-6 leading-relaxed">
          {subtitle}
        </h2>
      )}
      
      {/* 説明文 - 読みやすい明朝体 */}
      {description && (
        <p className="font-playfair text-base md:text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed font-light">
          {description}
        </p>
      )}
    </div>
  );
};
```

#### 美容院見出しの特徴
- **純粋な明朝体美**: Playfair Display フォントで上品さを演出
- **装飾完全排除**: ライン・ドット・背景色等の装飾を一切使用しない
- **文字の美しさ重視**: フォントの美しさとレタースペーシングに集中
- **階層構造明確**: 英語見出し → 日本語サブタイトル → 説明文の順序

### 🌸 美容院専用デザインパターン

#### エレガントなサービスカード
```tsx
// ✅ 推奨：美容院サービスカード（装飾なし・明朝体）
export const BeautyServiceCard: React.FC<{ service: BeautyService }> = ({ service }) => (
  <div className="group relative overflow-hidden bg-white hover:bg-rose-50 transition-all duration-500 p-8 border-l-4 border-rose-200 hover:border-rose-400">
    {/* サービス名 - 明朝体 */}
    <h3 className="font-playfair text-2xl md:text-3xl font-normal text-gray-800 mb-4 group-hover:text-rose-700 transition-colors">
      {service.name}
    </h3>
    
    {/* 説明文 - 明朝体 */}
    <p className="font-playfair text-base md:text-lg text-gray-600 leading-relaxed font-light mb-6">
      {service.description}
    </p>
    
    {/* 価格 - エレガント表示 */}
    <div className="flex items-baseline space-x-2">
      <span className="font-playfair text-2xl font-normal text-rose-700">
        {service.price}
      </span>
      <span className="font-playfair text-sm text-gray-500 font-light">
        ～
      </span>
    </div>
  </div>
);
```

#### 美容院専用ギャラリーレイアウト
```tsx
// ✅ 推奨：美容院ギャラリー（マソナリーレイアウト）
export const BeautyGallery: React.FC = () => (
  <div className="columns-1 md:columns-2 lg:columns-3 gap-6 space-y-6">
    {galleryImages.map((image, index) => (
      <div key={index} className="break-inside-avoid group cursor-pointer">
        <div className="relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-all duration-500">
          <img
            src={image.url}
            alt={image.title}
            className="w-full h-auto object-cover group-hover:scale-105 transition-transform duration-500"
            loading="lazy"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <div className="absolute bottom-4 left-4 text-white">
              <h4 className="font-playfair text-lg font-normal">{image.title}</h4>
              <p className="font-playfair text-sm font-light opacity-90">{image.category}</p>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
);
```

### 🎯 美容院デザイン実装チェックリスト（絶対必須）

#### 明朝体見出し確認項目
```
🚨 美容院見出しの必須確認項目：
□ セクション見出しが英語表記になっているか（ABOUT US, SERVICES, GALLERY等）
□ font-playfair が全見出し要素に適用されているか
□ 装飾ライン・ドット・背景色が完全に削除されているか
□ 英語見出しが text-rose-700 で統一されているか
□ tracking-[0.15em] でレタースペーシングが調整されているか
□ font-light, font-normal で適切なフォントウェイトが設定されているか
□ サブタイトルが text-gray-800 で読みやすく表示されているか
□ 説明文が text-gray-600 で適切なコントラストになっているか
□ leading-relaxed で行間が美しく調整されているか
□ 全体的に上品で洗練された印象を与えているか
```

#### カラーパレット確認項目
```
🚨 美容院カラーパレットの必須確認項目：
□ ローズ系（rose-700, rose-400）が基調色として使用されているか
□ ピンク系（pink-600, pink-500）がアクセントとして使用されているか
□ パープル系（purple-600, purple-400）が補色として使用されているか
□ 3色のグラデーション（from-rose via-pink to-purple）が統一されているか
□ 従来のアンバー系から美容院らしいカラーに変更されているか
□ 女性らしさ・エレガンスが視覚的に表現されているか
□ 全セクションで一貫したカラーパレットが使用されているか
```

#### レイアウト・UX確認項目
```
🚨 美容院レイアウトの必須確認項目：
□ カードデザインが排除され、自然な流れのレイアウトになっているか
□ サービス紹介に border-l-4 の左ボーダーデザインが使用されているか
□ ギャラリーにマソナリーレイアウト（columns-1 md:columns-2 lg:columns-3）が実装されているか
□ ホバー効果が上品で控えめになっているか（hover:bg-rose-50等）
□ 画像のズーム効果（group-hover:scale-105）が適切に実装されているか
□ 全体的に美容院らしい優雅な印象を与えているか
```

### 🌸 美容院ブランディング効果

#### カラー心理学的効果
- **ローズ（主色）**: エレガンス・女性らしさ・上品さ
- **ピンク（副色）**: 優雅・温かみ・親しみやすさ
- **パープル（accent）**: 高級感・神秘性・創造性

#### 顧客への心理的効果
- **憧れの醸成**: 美しいデザインで理想の自分への憧れを喚起
- **信頼感の構築**: 洗練されたデザインで技術力への信頼を獲得
- **特別感の演出**: 高級感あるデザインで特別な体験への期待を創出

### 🏷️ HP専用セクション見出しルール（必須）

#### セクション見出しの英語化原則
**主要セクションの見出しは英語で表記し、高級感・国際的な印象を演出する**

#### 必須英語見出し一覧
```tsx
// 🚨 必須：セクション見出しの英語表記（カフェ・ジム・美容院共通）
const SECTION_HEADINGS = {
  // カフェHP用
  about: "ABOUT US",           // ❌ 「私たちについて」
  menu: "OUR MENU",           // ❌ 「メニュー」
  location: "LOCATION",       // ❌ 「店舗情報」
  contact: "CONTACT",         // ❌ 「お問い合わせ」
  news: "NEWS",               // ❌ 「お知らせ」
  gallery: "GALLERY",         // ❌ 「ギャラリー」
  concept: "OUR CONCEPT",     // ❌ 「コンセプト」
  access: "ACCESS",           // ❌ 「アクセス」
  
  // ジムHP用
  programs: "PROGRAMS",       // ❌ 「プログラム」
  trainers: "TRAINERS",       // ❌ 「トレーナー」
  facilities: "FACILITIES",   // ❌ 「施設」
  membership: "MEMBERSHIP",   // ❌ 「料金プラン」
  
  // 美容院HP用
  services: "SERVICES",           // ❌ 「サービス」
  stylist: "PROFESSIONAL STYLISTS", // ❌ 「スタイリスト」
  treatment: "BEAUTY TREATMENT",   // ❌ 「トリートメント」
  bridal: "BRIDAL BEAUTY",        // ❌ 「ブライダル」
  reservation: "RESERVATION",     // ❌ 「ご予約」
} as const;
```